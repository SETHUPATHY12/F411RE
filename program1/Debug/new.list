
new.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011e0  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  08001380  08001380  00011380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013b8  080013b8  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  080013b8  080013b8  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080013b8  080013b8  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013b8  080013b8  000113b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080013bc  080013bc  000113bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  080013c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  0800141c  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  0800141c  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020086  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a3a  00000000  00000000  000200c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000037a  00000000  00000000  00020b03  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000148  00000000  00000000  00020e80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000dd  00000000  00000000  00020fc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002ca4  00000000  00000000  000210a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000014b4  00000000  00000000  00023d49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009759  00000000  00000000  000251fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b98  00000000  00000000  0002e958  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000036  00000000  00000000  0002f4f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001368 	.word	0x08001368

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001368 	.word	0x08001368

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0
	int a=50,b=80;
 8000286:	2332      	movs	r3, #50	; 0x32
 8000288:	607b      	str	r3, [r7, #4]
 800028a:	2350      	movs	r3, #80	; 0x50
 800028c:	603b      	str	r3, [r7, #0]
	printf("%d\n",math_add(0xa,0xb));
 800028e:	210b      	movs	r1, #11
 8000290:	200a      	movs	r0, #10
 8000292:	f000 f81f 	bl	80002d4 <math_add>
 8000296:	4603      	mov	r3, r0
 8000298:	4619      	mov	r1, r3
 800029a:	480d      	ldr	r0, [pc, #52]	; (80002d0 <main+0x50>)
 800029c:	f000 f9f6 	bl	800068c <iprintf>
	printf("%d\n",math_mul(a,b));
 80002a0:	6839      	ldr	r1, [r7, #0]
 80002a2:	6878      	ldr	r0, [r7, #4]
 80002a4:	f000 f823 	bl	80002ee <math_mul>
 80002a8:	4603      	mov	r3, r0
 80002aa:	4619      	mov	r1, r3
 80002ac:	4808      	ldr	r0, [pc, #32]	; (80002d0 <main+0x50>)
 80002ae:	f000 f9ed 	bl	800068c <iprintf>
	printf("%d\n",math_div(a,b));
 80002b2:	6839      	ldr	r1, [r7, #0]
 80002b4:	6878      	ldr	r0, [r7, #4]
 80002b6:	f000 f828 	bl	800030a <math_div>
 80002ba:	4603      	mov	r3, r0
 80002bc:	4619      	mov	r1, r3
 80002be:	4804      	ldr	r0, [pc, #16]	; (80002d0 <main+0x50>)
 80002c0:	f000 f9e4 	bl	800068c <iprintf>
	return 0;
 80002c4:	2300      	movs	r3, #0
	printf("sethu");
	for(;;);
}
 80002c6:	4618      	mov	r0, r3
 80002c8:	3708      	adds	r7, #8
 80002ca:	46bd      	mov	sp, r7
 80002cc:	bd80      	pop	{r7, pc}
 80002ce:	bf00      	nop
 80002d0:	08001380 	.word	0x08001380

080002d4 <math_add>:
int math_div(int a,int b);



int math_add(int a,int b)
{return a+b;}
 80002d4:	b480      	push	{r7}
 80002d6:	b083      	sub	sp, #12
 80002d8:	af00      	add	r7, sp, #0
 80002da:	6078      	str	r0, [r7, #4]
 80002dc:	6039      	str	r1, [r7, #0]
 80002de:	687a      	ldr	r2, [r7, #4]
 80002e0:	683b      	ldr	r3, [r7, #0]
 80002e2:	4413      	add	r3, r2
 80002e4:	4618      	mov	r0, r3
 80002e6:	370c      	adds	r7, #12
 80002e8:	46bd      	mov	sp, r7
 80002ea:	bc80      	pop	{r7}
 80002ec:	4770      	bx	lr

080002ee <math_mul>:
int math_mul(int a,int b)
{
 80002ee:	b480      	push	{r7}
 80002f0:	b083      	sub	sp, #12
 80002f2:	af00      	add	r7, sp, #0
 80002f4:	6078      	str	r0, [r7, #4]
 80002f6:	6039      	str	r1, [r7, #0]
	return a*b;
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	683a      	ldr	r2, [r7, #0]
 80002fc:	fb02 f303 	mul.w	r3, r2, r3
	}
 8000300:	4618      	mov	r0, r3
 8000302:	370c      	adds	r7, #12
 8000304:	46bd      	mov	sp, r7
 8000306:	bc80      	pop	{r7}
 8000308:	4770      	bx	lr

0800030a <math_div>:
int math_div(int a,int b)
{
 800030a:	b480      	push	{r7}
 800030c:	b083      	sub	sp, #12
 800030e:	af00      	add	r7, sp, #0
 8000310:	6078      	str	r0, [r7, #4]
 8000312:	6039      	str	r1, [r7, #0]
	return a/b;
 8000314:	687a      	ldr	r2, [r7, #4]
 8000316:	683b      	ldr	r3, [r7, #0]
 8000318:	fb92 f3f3 	sdiv	r3, r2, r3
	}
 800031c:	4618      	mov	r0, r3
 800031e:	370c      	adds	r7, #12
 8000320:	46bd      	mov	sp, r7
 8000322:	bc80      	pop	{r7}
 8000324:	4770      	bx	lr
	...

08000328 <ITM_SendChar>:
#define DEMCR *((volatile uint32_t*) 0xE000EDFCU )
/* ITM register addresses */
#define ITM_STIMULUS_PORT0 *((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN *((volatile uint32_t*) 0xE0000E00 )
void ITM_SendChar(uint8_t ch)
{  //Enable TRCENA
 8000328:	b480      	push	{r7}
 800032a:	b083      	sub	sp, #12
 800032c:	af00      	add	r7, sp, #0
 800032e:	4603      	mov	r3, r0
 8000330:	71fb      	strb	r3, [r7, #7]
DEMCR |= ( 1 << 24);
 8000332:	4b0e      	ldr	r3, [pc, #56]	; (800036c <ITM_SendChar+0x44>)
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	4a0d      	ldr	r2, [pc, #52]	; (800036c <ITM_SendChar+0x44>)
 8000338:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800033c:	6013      	str	r3, [r2, #0]
//enable stimulus port 0
ITM_TRACE_EN |= ( 1 << 0);
 800033e:	4b0c      	ldr	r3, [pc, #48]	; (8000370 <ITM_SendChar+0x48>)
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	4a0b      	ldr	r2, [pc, #44]	; (8000370 <ITM_SendChar+0x48>)
 8000344:	f043 0301 	orr.w	r3, r3, #1
 8000348:	6013      	str	r3, [r2, #0]
// read FIFO status in bit [0]:
while(!(ITM_STIMULUS_PORT0 & 1));
 800034a:	bf00      	nop
 800034c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	f003 0301 	and.w	r3, r3, #1
 8000356:	2b00      	cmp	r3, #0
 8000358:	d0f8      	beq.n	800034c <ITM_SendChar+0x24>
//Write to ITM stimulus port0
ITM_STIMULUS_PORT0 = ch;
 800035a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800035e:	79fb      	ldrb	r3, [r7, #7]
 8000360:	6013      	str	r3, [r2, #0]
}
 8000362:	bf00      	nop
 8000364:	370c      	adds	r7, #12
 8000366:	46bd      	mov	sp, r7
 8000368:	bc80      	pop	{r7}
 800036a:	4770      	bx	lr
 800036c:	e000edfc 	.word	0xe000edfc
 8000370:	e0000e00 	.word	0xe0000e00

08000374 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	b086      	sub	sp, #24
 8000378:	af00      	add	r7, sp, #0
 800037a:	60f8      	str	r0, [r7, #12]
 800037c:	60b9      	str	r1, [r7, #8]
 800037e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000380:	2300      	movs	r3, #0
 8000382:	617b      	str	r3, [r7, #20]
 8000384:	e00a      	b.n	800039c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000386:	f3af 8000 	nop.w
 800038a:	4601      	mov	r1, r0
 800038c:	68bb      	ldr	r3, [r7, #8]
 800038e:	1c5a      	adds	r2, r3, #1
 8000390:	60ba      	str	r2, [r7, #8]
 8000392:	b2ca      	uxtb	r2, r1
 8000394:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000396:	697b      	ldr	r3, [r7, #20]
 8000398:	3301      	adds	r3, #1
 800039a:	617b      	str	r3, [r7, #20]
 800039c:	697a      	ldr	r2, [r7, #20]
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	429a      	cmp	r2, r3
 80003a2:	dbf0      	blt.n	8000386 <_read+0x12>
  }

  return len;
 80003a4:	687b      	ldr	r3, [r7, #4]
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	3718      	adds	r7, #24
 80003aa:	46bd      	mov	sp, r7
 80003ac:	bd80      	pop	{r7, pc}

080003ae <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003ae:	b580      	push	{r7, lr}
 80003b0:	b086      	sub	sp, #24
 80003b2:	af00      	add	r7, sp, #0
 80003b4:	60f8      	str	r0, [r7, #12]
 80003b6:	60b9      	str	r1, [r7, #8]
 80003b8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ba:	2300      	movs	r3, #0
 80003bc:	617b      	str	r3, [r7, #20]
 80003be:	e009      	b.n	80003d4 <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 80003c0:	68bb      	ldr	r3, [r7, #8]
 80003c2:	1c5a      	adds	r2, r3, #1
 80003c4:	60ba      	str	r2, [r7, #8]
 80003c6:	781b      	ldrb	r3, [r3, #0]
 80003c8:	4618      	mov	r0, r3
 80003ca:	f7ff ffad 	bl	8000328 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ce:	697b      	ldr	r3, [r7, #20]
 80003d0:	3301      	adds	r3, #1
 80003d2:	617b      	str	r3, [r7, #20]
 80003d4:	697a      	ldr	r2, [r7, #20]
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	429a      	cmp	r2, r3
 80003da:	dbf1      	blt.n	80003c0 <_write+0x12>
   // __io_putchar(*ptr++);
  }
  return len;
 80003dc:	687b      	ldr	r3, [r7, #4]
}
 80003de:	4618      	mov	r0, r3
 80003e0:	3718      	adds	r7, #24
 80003e2:	46bd      	mov	sp, r7
 80003e4:	bd80      	pop	{r7, pc}

080003e6 <_close>:

int _close(int file)
{
 80003e6:	b480      	push	{r7}
 80003e8:	b083      	sub	sp, #12
 80003ea:	af00      	add	r7, sp, #0
 80003ec:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003ee:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003f2:	4618      	mov	r0, r3
 80003f4:	370c      	adds	r7, #12
 80003f6:	46bd      	mov	sp, r7
 80003f8:	bc80      	pop	{r7}
 80003fa:	4770      	bx	lr

080003fc <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003fc:	b480      	push	{r7}
 80003fe:	b083      	sub	sp, #12
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]
 8000404:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000406:	683b      	ldr	r3, [r7, #0]
 8000408:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800040c:	605a      	str	r2, [r3, #4]
  return 0;
 800040e:	2300      	movs	r3, #0
}
 8000410:	4618      	mov	r0, r3
 8000412:	370c      	adds	r7, #12
 8000414:	46bd      	mov	sp, r7
 8000416:	bc80      	pop	{r7}
 8000418:	4770      	bx	lr

0800041a <_isatty>:

int _isatty(int file)
{
 800041a:	b480      	push	{r7}
 800041c:	b083      	sub	sp, #12
 800041e:	af00      	add	r7, sp, #0
 8000420:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000422:	2301      	movs	r3, #1
}
 8000424:	4618      	mov	r0, r3
 8000426:	370c      	adds	r7, #12
 8000428:	46bd      	mov	sp, r7
 800042a:	bc80      	pop	{r7}
 800042c:	4770      	bx	lr

0800042e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800042e:	b480      	push	{r7}
 8000430:	b085      	sub	sp, #20
 8000432:	af00      	add	r7, sp, #0
 8000434:	60f8      	str	r0, [r7, #12]
 8000436:	60b9      	str	r1, [r7, #8]
 8000438:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800043a:	2300      	movs	r3, #0
}
 800043c:	4618      	mov	r0, r3
 800043e:	3714      	adds	r7, #20
 8000440:	46bd      	mov	sp, r7
 8000442:	bc80      	pop	{r7}
 8000444:	4770      	bx	lr
	...

08000448 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000448:	b580      	push	{r7, lr}
 800044a:	b086      	sub	sp, #24
 800044c:	af00      	add	r7, sp, #0
 800044e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000450:	4a14      	ldr	r2, [pc, #80]	; (80004a4 <_sbrk+0x5c>)
 8000452:	4b15      	ldr	r3, [pc, #84]	; (80004a8 <_sbrk+0x60>)
 8000454:	1ad3      	subs	r3, r2, r3
 8000456:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000458:	697b      	ldr	r3, [r7, #20]
 800045a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800045c:	4b13      	ldr	r3, [pc, #76]	; (80004ac <_sbrk+0x64>)
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	2b00      	cmp	r3, #0
 8000462:	d102      	bne.n	800046a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000464:	4b11      	ldr	r3, [pc, #68]	; (80004ac <_sbrk+0x64>)
 8000466:	4a12      	ldr	r2, [pc, #72]	; (80004b0 <_sbrk+0x68>)
 8000468:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800046a:	4b10      	ldr	r3, [pc, #64]	; (80004ac <_sbrk+0x64>)
 800046c:	681a      	ldr	r2, [r3, #0]
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	4413      	add	r3, r2
 8000472:	693a      	ldr	r2, [r7, #16]
 8000474:	429a      	cmp	r2, r3
 8000476:	d207      	bcs.n	8000488 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000478:	f000 f9ac 	bl	80007d4 <__errno>
 800047c:	4603      	mov	r3, r0
 800047e:	220c      	movs	r2, #12
 8000480:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000482:	f04f 33ff 	mov.w	r3, #4294967295
 8000486:	e009      	b.n	800049c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000488:	4b08      	ldr	r3, [pc, #32]	; (80004ac <_sbrk+0x64>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800048e:	4b07      	ldr	r3, [pc, #28]	; (80004ac <_sbrk+0x64>)
 8000490:	681a      	ldr	r2, [r3, #0]
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	4413      	add	r3, r2
 8000496:	4a05      	ldr	r2, [pc, #20]	; (80004ac <_sbrk+0x64>)
 8000498:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800049a:	68fb      	ldr	r3, [r7, #12]
}
 800049c:	4618      	mov	r0, r3
 800049e:	3718      	adds	r7, #24
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bd80      	pop	{r7, pc}
 80004a4:	20020000 	.word	0x20020000
 80004a8:	00000400 	.word	0x00000400
 80004ac:	20000078 	.word	0x20000078
 80004b0:	200001c8 	.word	0x200001c8

080004b4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004b4:	480d      	ldr	r0, [pc, #52]	; (80004ec <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004b6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004b8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004bc:	480c      	ldr	r0, [pc, #48]	; (80004f0 <LoopForever+0x6>)
  ldr r1, =_edata
 80004be:	490d      	ldr	r1, [pc, #52]	; (80004f4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004c0:	4a0d      	ldr	r2, [pc, #52]	; (80004f8 <LoopForever+0xe>)
  movs r3, #0
 80004c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004c4:	e002      	b.n	80004cc <LoopCopyDataInit>

080004c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004ca:	3304      	adds	r3, #4

080004cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004d0:	d3f9      	bcc.n	80004c6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004d2:	4a0a      	ldr	r2, [pc, #40]	; (80004fc <LoopForever+0x12>)
  ldr r4, =_ebss
 80004d4:	4c0a      	ldr	r4, [pc, #40]	; (8000500 <LoopForever+0x16>)
  movs r3, #0
 80004d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004d8:	e001      	b.n	80004de <LoopFillZerobss>

080004da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004dc:	3204      	adds	r2, #4

080004de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004e0:	d3fb      	bcc.n	80004da <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004e2:	f000 f97d 	bl	80007e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004e6:	f7ff fecb 	bl	8000280 <main>

080004ea <LoopForever>:

LoopForever:
  b LoopForever
 80004ea:	e7fe      	b.n	80004ea <LoopForever>
  ldr   r0, =_estack
 80004ec:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004f4:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004f8:	080013c0 	.word	0x080013c0
  ldr r2, =_sbss
 80004fc:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000500:	200001c8 	.word	0x200001c8

08000504 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000504:	e7fe      	b.n	8000504 <ADC_IRQHandler>
	...

08000508 <std>:
 8000508:	2300      	movs	r3, #0
 800050a:	b510      	push	{r4, lr}
 800050c:	4604      	mov	r4, r0
 800050e:	e9c0 3300 	strd	r3, r3, [r0]
 8000512:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000516:	6083      	str	r3, [r0, #8]
 8000518:	8181      	strh	r1, [r0, #12]
 800051a:	6643      	str	r3, [r0, #100]	; 0x64
 800051c:	81c2      	strh	r2, [r0, #14]
 800051e:	6183      	str	r3, [r0, #24]
 8000520:	4619      	mov	r1, r3
 8000522:	2208      	movs	r2, #8
 8000524:	305c      	adds	r0, #92	; 0x5c
 8000526:	f000 f906 	bl	8000736 <memset>
 800052a:	4b0d      	ldr	r3, [pc, #52]	; (8000560 <std+0x58>)
 800052c:	6263      	str	r3, [r4, #36]	; 0x24
 800052e:	4b0d      	ldr	r3, [pc, #52]	; (8000564 <std+0x5c>)
 8000530:	62a3      	str	r3, [r4, #40]	; 0x28
 8000532:	4b0d      	ldr	r3, [pc, #52]	; (8000568 <std+0x60>)
 8000534:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000536:	4b0d      	ldr	r3, [pc, #52]	; (800056c <std+0x64>)
 8000538:	6323      	str	r3, [r4, #48]	; 0x30
 800053a:	4b0d      	ldr	r3, [pc, #52]	; (8000570 <std+0x68>)
 800053c:	6224      	str	r4, [r4, #32]
 800053e:	429c      	cmp	r4, r3
 8000540:	d006      	beq.n	8000550 <std+0x48>
 8000542:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000546:	4294      	cmp	r4, r2
 8000548:	d002      	beq.n	8000550 <std+0x48>
 800054a:	33d0      	adds	r3, #208	; 0xd0
 800054c:	429c      	cmp	r4, r3
 800054e:	d105      	bne.n	800055c <std+0x54>
 8000550:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000554:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000558:	f000 b966 	b.w	8000828 <__retarget_lock_init_recursive>
 800055c:	bd10      	pop	{r4, pc}
 800055e:	bf00      	nop
 8000560:	080006b1 	.word	0x080006b1
 8000564:	080006d3 	.word	0x080006d3
 8000568:	0800070b 	.word	0x0800070b
 800056c:	0800072f 	.word	0x0800072f
 8000570:	2000007c 	.word	0x2000007c

08000574 <stdio_exit_handler>:
 8000574:	4a02      	ldr	r2, [pc, #8]	; (8000580 <stdio_exit_handler+0xc>)
 8000576:	4903      	ldr	r1, [pc, #12]	; (8000584 <stdio_exit_handler+0x10>)
 8000578:	4803      	ldr	r0, [pc, #12]	; (8000588 <stdio_exit_handler+0x14>)
 800057a:	f000 b869 	b.w	8000650 <_fwalk_sglue>
 800057e:	bf00      	nop
 8000580:	20000000 	.word	0x20000000
 8000584:	080010c5 	.word	0x080010c5
 8000588:	2000000c 	.word	0x2000000c

0800058c <cleanup_stdio>:
 800058c:	6841      	ldr	r1, [r0, #4]
 800058e:	4b0c      	ldr	r3, [pc, #48]	; (80005c0 <cleanup_stdio+0x34>)
 8000590:	4299      	cmp	r1, r3
 8000592:	b510      	push	{r4, lr}
 8000594:	4604      	mov	r4, r0
 8000596:	d001      	beq.n	800059c <cleanup_stdio+0x10>
 8000598:	f000 fd94 	bl	80010c4 <_fflush_r>
 800059c:	68a1      	ldr	r1, [r4, #8]
 800059e:	4b09      	ldr	r3, [pc, #36]	; (80005c4 <cleanup_stdio+0x38>)
 80005a0:	4299      	cmp	r1, r3
 80005a2:	d002      	beq.n	80005aa <cleanup_stdio+0x1e>
 80005a4:	4620      	mov	r0, r4
 80005a6:	f000 fd8d 	bl	80010c4 <_fflush_r>
 80005aa:	68e1      	ldr	r1, [r4, #12]
 80005ac:	4b06      	ldr	r3, [pc, #24]	; (80005c8 <cleanup_stdio+0x3c>)
 80005ae:	4299      	cmp	r1, r3
 80005b0:	d004      	beq.n	80005bc <cleanup_stdio+0x30>
 80005b2:	4620      	mov	r0, r4
 80005b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005b8:	f000 bd84 	b.w	80010c4 <_fflush_r>
 80005bc:	bd10      	pop	{r4, pc}
 80005be:	bf00      	nop
 80005c0:	2000007c 	.word	0x2000007c
 80005c4:	200000e4 	.word	0x200000e4
 80005c8:	2000014c 	.word	0x2000014c

080005cc <global_stdio_init.part.0>:
 80005cc:	b510      	push	{r4, lr}
 80005ce:	4b0b      	ldr	r3, [pc, #44]	; (80005fc <global_stdio_init.part.0+0x30>)
 80005d0:	4c0b      	ldr	r4, [pc, #44]	; (8000600 <global_stdio_init.part.0+0x34>)
 80005d2:	4a0c      	ldr	r2, [pc, #48]	; (8000604 <global_stdio_init.part.0+0x38>)
 80005d4:	601a      	str	r2, [r3, #0]
 80005d6:	4620      	mov	r0, r4
 80005d8:	2200      	movs	r2, #0
 80005da:	2104      	movs	r1, #4
 80005dc:	f7ff ff94 	bl	8000508 <std>
 80005e0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80005e4:	2201      	movs	r2, #1
 80005e6:	2109      	movs	r1, #9
 80005e8:	f7ff ff8e 	bl	8000508 <std>
 80005ec:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80005f0:	2202      	movs	r2, #2
 80005f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005f6:	2112      	movs	r1, #18
 80005f8:	f7ff bf86 	b.w	8000508 <std>
 80005fc:	200001b4 	.word	0x200001b4
 8000600:	2000007c 	.word	0x2000007c
 8000604:	08000575 	.word	0x08000575

08000608 <__sfp_lock_acquire>:
 8000608:	4801      	ldr	r0, [pc, #4]	; (8000610 <__sfp_lock_acquire+0x8>)
 800060a:	f000 b90e 	b.w	800082a <__retarget_lock_acquire_recursive>
 800060e:	bf00      	nop
 8000610:	200001bd 	.word	0x200001bd

08000614 <__sfp_lock_release>:
 8000614:	4801      	ldr	r0, [pc, #4]	; (800061c <__sfp_lock_release+0x8>)
 8000616:	f000 b909 	b.w	800082c <__retarget_lock_release_recursive>
 800061a:	bf00      	nop
 800061c:	200001bd 	.word	0x200001bd

08000620 <__sinit>:
 8000620:	b510      	push	{r4, lr}
 8000622:	4604      	mov	r4, r0
 8000624:	f7ff fff0 	bl	8000608 <__sfp_lock_acquire>
 8000628:	6a23      	ldr	r3, [r4, #32]
 800062a:	b11b      	cbz	r3, 8000634 <__sinit+0x14>
 800062c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000630:	f7ff bff0 	b.w	8000614 <__sfp_lock_release>
 8000634:	4b04      	ldr	r3, [pc, #16]	; (8000648 <__sinit+0x28>)
 8000636:	6223      	str	r3, [r4, #32]
 8000638:	4b04      	ldr	r3, [pc, #16]	; (800064c <__sinit+0x2c>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	2b00      	cmp	r3, #0
 800063e:	d1f5      	bne.n	800062c <__sinit+0xc>
 8000640:	f7ff ffc4 	bl	80005cc <global_stdio_init.part.0>
 8000644:	e7f2      	b.n	800062c <__sinit+0xc>
 8000646:	bf00      	nop
 8000648:	0800058d 	.word	0x0800058d
 800064c:	200001b4 	.word	0x200001b4

08000650 <_fwalk_sglue>:
 8000650:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000654:	4607      	mov	r7, r0
 8000656:	4688      	mov	r8, r1
 8000658:	4614      	mov	r4, r2
 800065a:	2600      	movs	r6, #0
 800065c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000660:	f1b9 0901 	subs.w	r9, r9, #1
 8000664:	d505      	bpl.n	8000672 <_fwalk_sglue+0x22>
 8000666:	6824      	ldr	r4, [r4, #0]
 8000668:	2c00      	cmp	r4, #0
 800066a:	d1f7      	bne.n	800065c <_fwalk_sglue+0xc>
 800066c:	4630      	mov	r0, r6
 800066e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000672:	89ab      	ldrh	r3, [r5, #12]
 8000674:	2b01      	cmp	r3, #1
 8000676:	d907      	bls.n	8000688 <_fwalk_sglue+0x38>
 8000678:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800067c:	3301      	adds	r3, #1
 800067e:	d003      	beq.n	8000688 <_fwalk_sglue+0x38>
 8000680:	4629      	mov	r1, r5
 8000682:	4638      	mov	r0, r7
 8000684:	47c0      	blx	r8
 8000686:	4306      	orrs	r6, r0
 8000688:	3568      	adds	r5, #104	; 0x68
 800068a:	e7e9      	b.n	8000660 <_fwalk_sglue+0x10>

0800068c <iprintf>:
 800068c:	b40f      	push	{r0, r1, r2, r3}
 800068e:	b507      	push	{r0, r1, r2, lr}
 8000690:	4906      	ldr	r1, [pc, #24]	; (80006ac <iprintf+0x20>)
 8000692:	ab04      	add	r3, sp, #16
 8000694:	6808      	ldr	r0, [r1, #0]
 8000696:	f853 2b04 	ldr.w	r2, [r3], #4
 800069a:	6881      	ldr	r1, [r0, #8]
 800069c:	9301      	str	r3, [sp, #4]
 800069e:	f000 f9e5 	bl	8000a6c <_vfiprintf_r>
 80006a2:	b003      	add	sp, #12
 80006a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80006a8:	b004      	add	sp, #16
 80006aa:	4770      	bx	lr
 80006ac:	20000058 	.word	0x20000058

080006b0 <__sread>:
 80006b0:	b510      	push	{r4, lr}
 80006b2:	460c      	mov	r4, r1
 80006b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006b8:	f000 f868 	bl	800078c <_read_r>
 80006bc:	2800      	cmp	r0, #0
 80006be:	bfab      	itete	ge
 80006c0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80006c2:	89a3      	ldrhlt	r3, [r4, #12]
 80006c4:	181b      	addge	r3, r3, r0
 80006c6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80006ca:	bfac      	ite	ge
 80006cc:	6563      	strge	r3, [r4, #84]	; 0x54
 80006ce:	81a3      	strhlt	r3, [r4, #12]
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <__swrite>:
 80006d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006d6:	461f      	mov	r7, r3
 80006d8:	898b      	ldrh	r3, [r1, #12]
 80006da:	05db      	lsls	r3, r3, #23
 80006dc:	4605      	mov	r5, r0
 80006de:	460c      	mov	r4, r1
 80006e0:	4616      	mov	r6, r2
 80006e2:	d505      	bpl.n	80006f0 <__swrite+0x1e>
 80006e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006e8:	2302      	movs	r3, #2
 80006ea:	2200      	movs	r2, #0
 80006ec:	f000 f83c 	bl	8000768 <_lseek_r>
 80006f0:	89a3      	ldrh	r3, [r4, #12]
 80006f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80006fa:	81a3      	strh	r3, [r4, #12]
 80006fc:	4632      	mov	r2, r6
 80006fe:	463b      	mov	r3, r7
 8000700:	4628      	mov	r0, r5
 8000702:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000706:	f000 b853 	b.w	80007b0 <_write_r>

0800070a <__sseek>:
 800070a:	b510      	push	{r4, lr}
 800070c:	460c      	mov	r4, r1
 800070e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000712:	f000 f829 	bl	8000768 <_lseek_r>
 8000716:	1c43      	adds	r3, r0, #1
 8000718:	89a3      	ldrh	r3, [r4, #12]
 800071a:	bf15      	itete	ne
 800071c:	6560      	strne	r0, [r4, #84]	; 0x54
 800071e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000722:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000726:	81a3      	strheq	r3, [r4, #12]
 8000728:	bf18      	it	ne
 800072a:	81a3      	strhne	r3, [r4, #12]
 800072c:	bd10      	pop	{r4, pc}

0800072e <__sclose>:
 800072e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000732:	f000 b809 	b.w	8000748 <_close_r>

08000736 <memset>:
 8000736:	4402      	add	r2, r0
 8000738:	4603      	mov	r3, r0
 800073a:	4293      	cmp	r3, r2
 800073c:	d100      	bne.n	8000740 <memset+0xa>
 800073e:	4770      	bx	lr
 8000740:	f803 1b01 	strb.w	r1, [r3], #1
 8000744:	e7f9      	b.n	800073a <memset+0x4>
	...

08000748 <_close_r>:
 8000748:	b538      	push	{r3, r4, r5, lr}
 800074a:	4d06      	ldr	r5, [pc, #24]	; (8000764 <_close_r+0x1c>)
 800074c:	2300      	movs	r3, #0
 800074e:	4604      	mov	r4, r0
 8000750:	4608      	mov	r0, r1
 8000752:	602b      	str	r3, [r5, #0]
 8000754:	f7ff fe47 	bl	80003e6 <_close>
 8000758:	1c43      	adds	r3, r0, #1
 800075a:	d102      	bne.n	8000762 <_close_r+0x1a>
 800075c:	682b      	ldr	r3, [r5, #0]
 800075e:	b103      	cbz	r3, 8000762 <_close_r+0x1a>
 8000760:	6023      	str	r3, [r4, #0]
 8000762:	bd38      	pop	{r3, r4, r5, pc}
 8000764:	200001b8 	.word	0x200001b8

08000768 <_lseek_r>:
 8000768:	b538      	push	{r3, r4, r5, lr}
 800076a:	4d07      	ldr	r5, [pc, #28]	; (8000788 <_lseek_r+0x20>)
 800076c:	4604      	mov	r4, r0
 800076e:	4608      	mov	r0, r1
 8000770:	4611      	mov	r1, r2
 8000772:	2200      	movs	r2, #0
 8000774:	602a      	str	r2, [r5, #0]
 8000776:	461a      	mov	r2, r3
 8000778:	f7ff fe59 	bl	800042e <_lseek>
 800077c:	1c43      	adds	r3, r0, #1
 800077e:	d102      	bne.n	8000786 <_lseek_r+0x1e>
 8000780:	682b      	ldr	r3, [r5, #0]
 8000782:	b103      	cbz	r3, 8000786 <_lseek_r+0x1e>
 8000784:	6023      	str	r3, [r4, #0]
 8000786:	bd38      	pop	{r3, r4, r5, pc}
 8000788:	200001b8 	.word	0x200001b8

0800078c <_read_r>:
 800078c:	b538      	push	{r3, r4, r5, lr}
 800078e:	4d07      	ldr	r5, [pc, #28]	; (80007ac <_read_r+0x20>)
 8000790:	4604      	mov	r4, r0
 8000792:	4608      	mov	r0, r1
 8000794:	4611      	mov	r1, r2
 8000796:	2200      	movs	r2, #0
 8000798:	602a      	str	r2, [r5, #0]
 800079a:	461a      	mov	r2, r3
 800079c:	f7ff fdea 	bl	8000374 <_read>
 80007a0:	1c43      	adds	r3, r0, #1
 80007a2:	d102      	bne.n	80007aa <_read_r+0x1e>
 80007a4:	682b      	ldr	r3, [r5, #0]
 80007a6:	b103      	cbz	r3, 80007aa <_read_r+0x1e>
 80007a8:	6023      	str	r3, [r4, #0]
 80007aa:	bd38      	pop	{r3, r4, r5, pc}
 80007ac:	200001b8 	.word	0x200001b8

080007b0 <_write_r>:
 80007b0:	b538      	push	{r3, r4, r5, lr}
 80007b2:	4d07      	ldr	r5, [pc, #28]	; (80007d0 <_write_r+0x20>)
 80007b4:	4604      	mov	r4, r0
 80007b6:	4608      	mov	r0, r1
 80007b8:	4611      	mov	r1, r2
 80007ba:	2200      	movs	r2, #0
 80007bc:	602a      	str	r2, [r5, #0]
 80007be:	461a      	mov	r2, r3
 80007c0:	f7ff fdf5 	bl	80003ae <_write>
 80007c4:	1c43      	adds	r3, r0, #1
 80007c6:	d102      	bne.n	80007ce <_write_r+0x1e>
 80007c8:	682b      	ldr	r3, [r5, #0]
 80007ca:	b103      	cbz	r3, 80007ce <_write_r+0x1e>
 80007cc:	6023      	str	r3, [r4, #0]
 80007ce:	bd38      	pop	{r3, r4, r5, pc}
 80007d0:	200001b8 	.word	0x200001b8

080007d4 <__errno>:
 80007d4:	4b01      	ldr	r3, [pc, #4]	; (80007dc <__errno+0x8>)
 80007d6:	6818      	ldr	r0, [r3, #0]
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop
 80007dc:	20000058 	.word	0x20000058

080007e0 <__libc_init_array>:
 80007e0:	b570      	push	{r4, r5, r6, lr}
 80007e2:	4d0d      	ldr	r5, [pc, #52]	; (8000818 <__libc_init_array+0x38>)
 80007e4:	4c0d      	ldr	r4, [pc, #52]	; (800081c <__libc_init_array+0x3c>)
 80007e6:	1b64      	subs	r4, r4, r5
 80007e8:	10a4      	asrs	r4, r4, #2
 80007ea:	2600      	movs	r6, #0
 80007ec:	42a6      	cmp	r6, r4
 80007ee:	d109      	bne.n	8000804 <__libc_init_array+0x24>
 80007f0:	4d0b      	ldr	r5, [pc, #44]	; (8000820 <__libc_init_array+0x40>)
 80007f2:	4c0c      	ldr	r4, [pc, #48]	; (8000824 <__libc_init_array+0x44>)
 80007f4:	f000 fdb8 	bl	8001368 <_init>
 80007f8:	1b64      	subs	r4, r4, r5
 80007fa:	10a4      	asrs	r4, r4, #2
 80007fc:	2600      	movs	r6, #0
 80007fe:	42a6      	cmp	r6, r4
 8000800:	d105      	bne.n	800080e <__libc_init_array+0x2e>
 8000802:	bd70      	pop	{r4, r5, r6, pc}
 8000804:	f855 3b04 	ldr.w	r3, [r5], #4
 8000808:	4798      	blx	r3
 800080a:	3601      	adds	r6, #1
 800080c:	e7ee      	b.n	80007ec <__libc_init_array+0xc>
 800080e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000812:	4798      	blx	r3
 8000814:	3601      	adds	r6, #1
 8000816:	e7f2      	b.n	80007fe <__libc_init_array+0x1e>
 8000818:	080013b8 	.word	0x080013b8
 800081c:	080013b8 	.word	0x080013b8
 8000820:	080013b8 	.word	0x080013b8
 8000824:	080013bc 	.word	0x080013bc

08000828 <__retarget_lock_init_recursive>:
 8000828:	4770      	bx	lr

0800082a <__retarget_lock_acquire_recursive>:
 800082a:	4770      	bx	lr

0800082c <__retarget_lock_release_recursive>:
 800082c:	4770      	bx	lr
	...

08000830 <_free_r>:
 8000830:	b538      	push	{r3, r4, r5, lr}
 8000832:	4605      	mov	r5, r0
 8000834:	2900      	cmp	r1, #0
 8000836:	d041      	beq.n	80008bc <_free_r+0x8c>
 8000838:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800083c:	1f0c      	subs	r4, r1, #4
 800083e:	2b00      	cmp	r3, #0
 8000840:	bfb8      	it	lt
 8000842:	18e4      	addlt	r4, r4, r3
 8000844:	f000 f8de 	bl	8000a04 <__malloc_lock>
 8000848:	4a1d      	ldr	r2, [pc, #116]	; (80008c0 <_free_r+0x90>)
 800084a:	6813      	ldr	r3, [r2, #0]
 800084c:	b933      	cbnz	r3, 800085c <_free_r+0x2c>
 800084e:	6063      	str	r3, [r4, #4]
 8000850:	6014      	str	r4, [r2, #0]
 8000852:	4628      	mov	r0, r5
 8000854:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000858:	f000 b8da 	b.w	8000a10 <__malloc_unlock>
 800085c:	42a3      	cmp	r3, r4
 800085e:	d908      	bls.n	8000872 <_free_r+0x42>
 8000860:	6820      	ldr	r0, [r4, #0]
 8000862:	1821      	adds	r1, r4, r0
 8000864:	428b      	cmp	r3, r1
 8000866:	bf01      	itttt	eq
 8000868:	6819      	ldreq	r1, [r3, #0]
 800086a:	685b      	ldreq	r3, [r3, #4]
 800086c:	1809      	addeq	r1, r1, r0
 800086e:	6021      	streq	r1, [r4, #0]
 8000870:	e7ed      	b.n	800084e <_free_r+0x1e>
 8000872:	461a      	mov	r2, r3
 8000874:	685b      	ldr	r3, [r3, #4]
 8000876:	b10b      	cbz	r3, 800087c <_free_r+0x4c>
 8000878:	42a3      	cmp	r3, r4
 800087a:	d9fa      	bls.n	8000872 <_free_r+0x42>
 800087c:	6811      	ldr	r1, [r2, #0]
 800087e:	1850      	adds	r0, r2, r1
 8000880:	42a0      	cmp	r0, r4
 8000882:	d10b      	bne.n	800089c <_free_r+0x6c>
 8000884:	6820      	ldr	r0, [r4, #0]
 8000886:	4401      	add	r1, r0
 8000888:	1850      	adds	r0, r2, r1
 800088a:	4283      	cmp	r3, r0
 800088c:	6011      	str	r1, [r2, #0]
 800088e:	d1e0      	bne.n	8000852 <_free_r+0x22>
 8000890:	6818      	ldr	r0, [r3, #0]
 8000892:	685b      	ldr	r3, [r3, #4]
 8000894:	6053      	str	r3, [r2, #4]
 8000896:	4408      	add	r0, r1
 8000898:	6010      	str	r0, [r2, #0]
 800089a:	e7da      	b.n	8000852 <_free_r+0x22>
 800089c:	d902      	bls.n	80008a4 <_free_r+0x74>
 800089e:	230c      	movs	r3, #12
 80008a0:	602b      	str	r3, [r5, #0]
 80008a2:	e7d6      	b.n	8000852 <_free_r+0x22>
 80008a4:	6820      	ldr	r0, [r4, #0]
 80008a6:	1821      	adds	r1, r4, r0
 80008a8:	428b      	cmp	r3, r1
 80008aa:	bf04      	itt	eq
 80008ac:	6819      	ldreq	r1, [r3, #0]
 80008ae:	685b      	ldreq	r3, [r3, #4]
 80008b0:	6063      	str	r3, [r4, #4]
 80008b2:	bf04      	itt	eq
 80008b4:	1809      	addeq	r1, r1, r0
 80008b6:	6021      	streq	r1, [r4, #0]
 80008b8:	6054      	str	r4, [r2, #4]
 80008ba:	e7ca      	b.n	8000852 <_free_r+0x22>
 80008bc:	bd38      	pop	{r3, r4, r5, pc}
 80008be:	bf00      	nop
 80008c0:	200001c0 	.word	0x200001c0

080008c4 <sbrk_aligned>:
 80008c4:	b570      	push	{r4, r5, r6, lr}
 80008c6:	4e0e      	ldr	r6, [pc, #56]	; (8000900 <sbrk_aligned+0x3c>)
 80008c8:	460c      	mov	r4, r1
 80008ca:	6831      	ldr	r1, [r6, #0]
 80008cc:	4605      	mov	r5, r0
 80008ce:	b911      	cbnz	r1, 80008d6 <sbrk_aligned+0x12>
 80008d0:	f000 fcb6 	bl	8001240 <_sbrk_r>
 80008d4:	6030      	str	r0, [r6, #0]
 80008d6:	4621      	mov	r1, r4
 80008d8:	4628      	mov	r0, r5
 80008da:	f000 fcb1 	bl	8001240 <_sbrk_r>
 80008de:	1c43      	adds	r3, r0, #1
 80008e0:	d00a      	beq.n	80008f8 <sbrk_aligned+0x34>
 80008e2:	1cc4      	adds	r4, r0, #3
 80008e4:	f024 0403 	bic.w	r4, r4, #3
 80008e8:	42a0      	cmp	r0, r4
 80008ea:	d007      	beq.n	80008fc <sbrk_aligned+0x38>
 80008ec:	1a21      	subs	r1, r4, r0
 80008ee:	4628      	mov	r0, r5
 80008f0:	f000 fca6 	bl	8001240 <_sbrk_r>
 80008f4:	3001      	adds	r0, #1
 80008f6:	d101      	bne.n	80008fc <sbrk_aligned+0x38>
 80008f8:	f04f 34ff 	mov.w	r4, #4294967295
 80008fc:	4620      	mov	r0, r4
 80008fe:	bd70      	pop	{r4, r5, r6, pc}
 8000900:	200001c4 	.word	0x200001c4

08000904 <_malloc_r>:
 8000904:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000908:	1ccd      	adds	r5, r1, #3
 800090a:	f025 0503 	bic.w	r5, r5, #3
 800090e:	3508      	adds	r5, #8
 8000910:	2d0c      	cmp	r5, #12
 8000912:	bf38      	it	cc
 8000914:	250c      	movcc	r5, #12
 8000916:	2d00      	cmp	r5, #0
 8000918:	4607      	mov	r7, r0
 800091a:	db01      	blt.n	8000920 <_malloc_r+0x1c>
 800091c:	42a9      	cmp	r1, r5
 800091e:	d905      	bls.n	800092c <_malloc_r+0x28>
 8000920:	230c      	movs	r3, #12
 8000922:	603b      	str	r3, [r7, #0]
 8000924:	2600      	movs	r6, #0
 8000926:	4630      	mov	r0, r6
 8000928:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800092c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a00 <_malloc_r+0xfc>
 8000930:	f000 f868 	bl	8000a04 <__malloc_lock>
 8000934:	f8d8 3000 	ldr.w	r3, [r8]
 8000938:	461c      	mov	r4, r3
 800093a:	bb5c      	cbnz	r4, 8000994 <_malloc_r+0x90>
 800093c:	4629      	mov	r1, r5
 800093e:	4638      	mov	r0, r7
 8000940:	f7ff ffc0 	bl	80008c4 <sbrk_aligned>
 8000944:	1c43      	adds	r3, r0, #1
 8000946:	4604      	mov	r4, r0
 8000948:	d155      	bne.n	80009f6 <_malloc_r+0xf2>
 800094a:	f8d8 4000 	ldr.w	r4, [r8]
 800094e:	4626      	mov	r6, r4
 8000950:	2e00      	cmp	r6, #0
 8000952:	d145      	bne.n	80009e0 <_malloc_r+0xdc>
 8000954:	2c00      	cmp	r4, #0
 8000956:	d048      	beq.n	80009ea <_malloc_r+0xe6>
 8000958:	6823      	ldr	r3, [r4, #0]
 800095a:	4631      	mov	r1, r6
 800095c:	4638      	mov	r0, r7
 800095e:	eb04 0903 	add.w	r9, r4, r3
 8000962:	f000 fc6d 	bl	8001240 <_sbrk_r>
 8000966:	4581      	cmp	r9, r0
 8000968:	d13f      	bne.n	80009ea <_malloc_r+0xe6>
 800096a:	6821      	ldr	r1, [r4, #0]
 800096c:	1a6d      	subs	r5, r5, r1
 800096e:	4629      	mov	r1, r5
 8000970:	4638      	mov	r0, r7
 8000972:	f7ff ffa7 	bl	80008c4 <sbrk_aligned>
 8000976:	3001      	adds	r0, #1
 8000978:	d037      	beq.n	80009ea <_malloc_r+0xe6>
 800097a:	6823      	ldr	r3, [r4, #0]
 800097c:	442b      	add	r3, r5
 800097e:	6023      	str	r3, [r4, #0]
 8000980:	f8d8 3000 	ldr.w	r3, [r8]
 8000984:	2b00      	cmp	r3, #0
 8000986:	d038      	beq.n	80009fa <_malloc_r+0xf6>
 8000988:	685a      	ldr	r2, [r3, #4]
 800098a:	42a2      	cmp	r2, r4
 800098c:	d12b      	bne.n	80009e6 <_malloc_r+0xe2>
 800098e:	2200      	movs	r2, #0
 8000990:	605a      	str	r2, [r3, #4]
 8000992:	e00f      	b.n	80009b4 <_malloc_r+0xb0>
 8000994:	6822      	ldr	r2, [r4, #0]
 8000996:	1b52      	subs	r2, r2, r5
 8000998:	d41f      	bmi.n	80009da <_malloc_r+0xd6>
 800099a:	2a0b      	cmp	r2, #11
 800099c:	d917      	bls.n	80009ce <_malloc_r+0xca>
 800099e:	1961      	adds	r1, r4, r5
 80009a0:	42a3      	cmp	r3, r4
 80009a2:	6025      	str	r5, [r4, #0]
 80009a4:	bf18      	it	ne
 80009a6:	6059      	strne	r1, [r3, #4]
 80009a8:	6863      	ldr	r3, [r4, #4]
 80009aa:	bf08      	it	eq
 80009ac:	f8c8 1000 	streq.w	r1, [r8]
 80009b0:	5162      	str	r2, [r4, r5]
 80009b2:	604b      	str	r3, [r1, #4]
 80009b4:	4638      	mov	r0, r7
 80009b6:	f104 060b 	add.w	r6, r4, #11
 80009ba:	f000 f829 	bl	8000a10 <__malloc_unlock>
 80009be:	f026 0607 	bic.w	r6, r6, #7
 80009c2:	1d23      	adds	r3, r4, #4
 80009c4:	1af2      	subs	r2, r6, r3
 80009c6:	d0ae      	beq.n	8000926 <_malloc_r+0x22>
 80009c8:	1b9b      	subs	r3, r3, r6
 80009ca:	50a3      	str	r3, [r4, r2]
 80009cc:	e7ab      	b.n	8000926 <_malloc_r+0x22>
 80009ce:	42a3      	cmp	r3, r4
 80009d0:	6862      	ldr	r2, [r4, #4]
 80009d2:	d1dd      	bne.n	8000990 <_malloc_r+0x8c>
 80009d4:	f8c8 2000 	str.w	r2, [r8]
 80009d8:	e7ec      	b.n	80009b4 <_malloc_r+0xb0>
 80009da:	4623      	mov	r3, r4
 80009dc:	6864      	ldr	r4, [r4, #4]
 80009de:	e7ac      	b.n	800093a <_malloc_r+0x36>
 80009e0:	4634      	mov	r4, r6
 80009e2:	6876      	ldr	r6, [r6, #4]
 80009e4:	e7b4      	b.n	8000950 <_malloc_r+0x4c>
 80009e6:	4613      	mov	r3, r2
 80009e8:	e7cc      	b.n	8000984 <_malloc_r+0x80>
 80009ea:	230c      	movs	r3, #12
 80009ec:	603b      	str	r3, [r7, #0]
 80009ee:	4638      	mov	r0, r7
 80009f0:	f000 f80e 	bl	8000a10 <__malloc_unlock>
 80009f4:	e797      	b.n	8000926 <_malloc_r+0x22>
 80009f6:	6025      	str	r5, [r4, #0]
 80009f8:	e7dc      	b.n	80009b4 <_malloc_r+0xb0>
 80009fa:	605b      	str	r3, [r3, #4]
 80009fc:	deff      	udf	#255	; 0xff
 80009fe:	bf00      	nop
 8000a00:	200001c0 	.word	0x200001c0

08000a04 <__malloc_lock>:
 8000a04:	4801      	ldr	r0, [pc, #4]	; (8000a0c <__malloc_lock+0x8>)
 8000a06:	f7ff bf10 	b.w	800082a <__retarget_lock_acquire_recursive>
 8000a0a:	bf00      	nop
 8000a0c:	200001bc 	.word	0x200001bc

08000a10 <__malloc_unlock>:
 8000a10:	4801      	ldr	r0, [pc, #4]	; (8000a18 <__malloc_unlock+0x8>)
 8000a12:	f7ff bf0b 	b.w	800082c <__retarget_lock_release_recursive>
 8000a16:	bf00      	nop
 8000a18:	200001bc 	.word	0x200001bc

08000a1c <__sfputc_r>:
 8000a1c:	6893      	ldr	r3, [r2, #8]
 8000a1e:	3b01      	subs	r3, #1
 8000a20:	2b00      	cmp	r3, #0
 8000a22:	b410      	push	{r4}
 8000a24:	6093      	str	r3, [r2, #8]
 8000a26:	da07      	bge.n	8000a38 <__sfputc_r+0x1c>
 8000a28:	6994      	ldr	r4, [r2, #24]
 8000a2a:	42a3      	cmp	r3, r4
 8000a2c:	db01      	blt.n	8000a32 <__sfputc_r+0x16>
 8000a2e:	290a      	cmp	r1, #10
 8000a30:	d102      	bne.n	8000a38 <__sfputc_r+0x1c>
 8000a32:	bc10      	pop	{r4}
 8000a34:	f000 bb6e 	b.w	8001114 <__swbuf_r>
 8000a38:	6813      	ldr	r3, [r2, #0]
 8000a3a:	1c58      	adds	r0, r3, #1
 8000a3c:	6010      	str	r0, [r2, #0]
 8000a3e:	7019      	strb	r1, [r3, #0]
 8000a40:	4608      	mov	r0, r1
 8000a42:	bc10      	pop	{r4}
 8000a44:	4770      	bx	lr

08000a46 <__sfputs_r>:
 8000a46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a48:	4606      	mov	r6, r0
 8000a4a:	460f      	mov	r7, r1
 8000a4c:	4614      	mov	r4, r2
 8000a4e:	18d5      	adds	r5, r2, r3
 8000a50:	42ac      	cmp	r4, r5
 8000a52:	d101      	bne.n	8000a58 <__sfputs_r+0x12>
 8000a54:	2000      	movs	r0, #0
 8000a56:	e007      	b.n	8000a68 <__sfputs_r+0x22>
 8000a58:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a5c:	463a      	mov	r2, r7
 8000a5e:	4630      	mov	r0, r6
 8000a60:	f7ff ffdc 	bl	8000a1c <__sfputc_r>
 8000a64:	1c43      	adds	r3, r0, #1
 8000a66:	d1f3      	bne.n	8000a50 <__sfputs_r+0xa>
 8000a68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a6c <_vfiprintf_r>:
 8000a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a70:	460d      	mov	r5, r1
 8000a72:	b09d      	sub	sp, #116	; 0x74
 8000a74:	4614      	mov	r4, r2
 8000a76:	4698      	mov	r8, r3
 8000a78:	4606      	mov	r6, r0
 8000a7a:	b118      	cbz	r0, 8000a84 <_vfiprintf_r+0x18>
 8000a7c:	6a03      	ldr	r3, [r0, #32]
 8000a7e:	b90b      	cbnz	r3, 8000a84 <_vfiprintf_r+0x18>
 8000a80:	f7ff fdce 	bl	8000620 <__sinit>
 8000a84:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a86:	07d9      	lsls	r1, r3, #31
 8000a88:	d405      	bmi.n	8000a96 <_vfiprintf_r+0x2a>
 8000a8a:	89ab      	ldrh	r3, [r5, #12]
 8000a8c:	059a      	lsls	r2, r3, #22
 8000a8e:	d402      	bmi.n	8000a96 <_vfiprintf_r+0x2a>
 8000a90:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a92:	f7ff feca 	bl	800082a <__retarget_lock_acquire_recursive>
 8000a96:	89ab      	ldrh	r3, [r5, #12]
 8000a98:	071b      	lsls	r3, r3, #28
 8000a9a:	d501      	bpl.n	8000aa0 <_vfiprintf_r+0x34>
 8000a9c:	692b      	ldr	r3, [r5, #16]
 8000a9e:	b99b      	cbnz	r3, 8000ac8 <_vfiprintf_r+0x5c>
 8000aa0:	4629      	mov	r1, r5
 8000aa2:	4630      	mov	r0, r6
 8000aa4:	f000 fb74 	bl	8001190 <__swsetup_r>
 8000aa8:	b170      	cbz	r0, 8000ac8 <_vfiprintf_r+0x5c>
 8000aaa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000aac:	07dc      	lsls	r4, r3, #31
 8000aae:	d504      	bpl.n	8000aba <_vfiprintf_r+0x4e>
 8000ab0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ab4:	b01d      	add	sp, #116	; 0x74
 8000ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000aba:	89ab      	ldrh	r3, [r5, #12]
 8000abc:	0598      	lsls	r0, r3, #22
 8000abe:	d4f7      	bmi.n	8000ab0 <_vfiprintf_r+0x44>
 8000ac0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ac2:	f7ff feb3 	bl	800082c <__retarget_lock_release_recursive>
 8000ac6:	e7f3      	b.n	8000ab0 <_vfiprintf_r+0x44>
 8000ac8:	2300      	movs	r3, #0
 8000aca:	9309      	str	r3, [sp, #36]	; 0x24
 8000acc:	2320      	movs	r3, #32
 8000ace:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000ad2:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ad6:	2330      	movs	r3, #48	; 0x30
 8000ad8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000c8c <_vfiprintf_r+0x220>
 8000adc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000ae0:	f04f 0901 	mov.w	r9, #1
 8000ae4:	4623      	mov	r3, r4
 8000ae6:	469a      	mov	sl, r3
 8000ae8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000aec:	b10a      	cbz	r2, 8000af2 <_vfiprintf_r+0x86>
 8000aee:	2a25      	cmp	r2, #37	; 0x25
 8000af0:	d1f9      	bne.n	8000ae6 <_vfiprintf_r+0x7a>
 8000af2:	ebba 0b04 	subs.w	fp, sl, r4
 8000af6:	d00b      	beq.n	8000b10 <_vfiprintf_r+0xa4>
 8000af8:	465b      	mov	r3, fp
 8000afa:	4622      	mov	r2, r4
 8000afc:	4629      	mov	r1, r5
 8000afe:	4630      	mov	r0, r6
 8000b00:	f7ff ffa1 	bl	8000a46 <__sfputs_r>
 8000b04:	3001      	adds	r0, #1
 8000b06:	f000 80a9 	beq.w	8000c5c <_vfiprintf_r+0x1f0>
 8000b0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b0c:	445a      	add	r2, fp
 8000b0e:	9209      	str	r2, [sp, #36]	; 0x24
 8000b10:	f89a 3000 	ldrb.w	r3, [sl]
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	f000 80a1 	beq.w	8000c5c <_vfiprintf_r+0x1f0>
 8000b1a:	2300      	movs	r3, #0
 8000b1c:	f04f 32ff 	mov.w	r2, #4294967295
 8000b20:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b24:	f10a 0a01 	add.w	sl, sl, #1
 8000b28:	9304      	str	r3, [sp, #16]
 8000b2a:	9307      	str	r3, [sp, #28]
 8000b2c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b30:	931a      	str	r3, [sp, #104]	; 0x68
 8000b32:	4654      	mov	r4, sl
 8000b34:	2205      	movs	r2, #5
 8000b36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b3a:	4854      	ldr	r0, [pc, #336]	; (8000c8c <_vfiprintf_r+0x220>)
 8000b3c:	f7ff fb50 	bl	80001e0 <memchr>
 8000b40:	9a04      	ldr	r2, [sp, #16]
 8000b42:	b9d8      	cbnz	r0, 8000b7c <_vfiprintf_r+0x110>
 8000b44:	06d1      	lsls	r1, r2, #27
 8000b46:	bf44      	itt	mi
 8000b48:	2320      	movmi	r3, #32
 8000b4a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b4e:	0713      	lsls	r3, r2, #28
 8000b50:	bf44      	itt	mi
 8000b52:	232b      	movmi	r3, #43	; 0x2b
 8000b54:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b58:	f89a 3000 	ldrb.w	r3, [sl]
 8000b5c:	2b2a      	cmp	r3, #42	; 0x2a
 8000b5e:	d015      	beq.n	8000b8c <_vfiprintf_r+0x120>
 8000b60:	9a07      	ldr	r2, [sp, #28]
 8000b62:	4654      	mov	r4, sl
 8000b64:	2000      	movs	r0, #0
 8000b66:	f04f 0c0a 	mov.w	ip, #10
 8000b6a:	4621      	mov	r1, r4
 8000b6c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b70:	3b30      	subs	r3, #48	; 0x30
 8000b72:	2b09      	cmp	r3, #9
 8000b74:	d94d      	bls.n	8000c12 <_vfiprintf_r+0x1a6>
 8000b76:	b1b0      	cbz	r0, 8000ba6 <_vfiprintf_r+0x13a>
 8000b78:	9207      	str	r2, [sp, #28]
 8000b7a:	e014      	b.n	8000ba6 <_vfiprintf_r+0x13a>
 8000b7c:	eba0 0308 	sub.w	r3, r0, r8
 8000b80:	fa09 f303 	lsl.w	r3, r9, r3
 8000b84:	4313      	orrs	r3, r2
 8000b86:	9304      	str	r3, [sp, #16]
 8000b88:	46a2      	mov	sl, r4
 8000b8a:	e7d2      	b.n	8000b32 <_vfiprintf_r+0xc6>
 8000b8c:	9b03      	ldr	r3, [sp, #12]
 8000b8e:	1d19      	adds	r1, r3, #4
 8000b90:	681b      	ldr	r3, [r3, #0]
 8000b92:	9103      	str	r1, [sp, #12]
 8000b94:	2b00      	cmp	r3, #0
 8000b96:	bfbb      	ittet	lt
 8000b98:	425b      	neglt	r3, r3
 8000b9a:	f042 0202 	orrlt.w	r2, r2, #2
 8000b9e:	9307      	strge	r3, [sp, #28]
 8000ba0:	9307      	strlt	r3, [sp, #28]
 8000ba2:	bfb8      	it	lt
 8000ba4:	9204      	strlt	r2, [sp, #16]
 8000ba6:	7823      	ldrb	r3, [r4, #0]
 8000ba8:	2b2e      	cmp	r3, #46	; 0x2e
 8000baa:	d10c      	bne.n	8000bc6 <_vfiprintf_r+0x15a>
 8000bac:	7863      	ldrb	r3, [r4, #1]
 8000bae:	2b2a      	cmp	r3, #42	; 0x2a
 8000bb0:	d134      	bne.n	8000c1c <_vfiprintf_r+0x1b0>
 8000bb2:	9b03      	ldr	r3, [sp, #12]
 8000bb4:	1d1a      	adds	r2, r3, #4
 8000bb6:	681b      	ldr	r3, [r3, #0]
 8000bb8:	9203      	str	r2, [sp, #12]
 8000bba:	2b00      	cmp	r3, #0
 8000bbc:	bfb8      	it	lt
 8000bbe:	f04f 33ff 	movlt.w	r3, #4294967295
 8000bc2:	3402      	adds	r4, #2
 8000bc4:	9305      	str	r3, [sp, #20]
 8000bc6:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000c90 <_vfiprintf_r+0x224>
 8000bca:	7821      	ldrb	r1, [r4, #0]
 8000bcc:	2203      	movs	r2, #3
 8000bce:	4650      	mov	r0, sl
 8000bd0:	f7ff fb06 	bl	80001e0 <memchr>
 8000bd4:	b138      	cbz	r0, 8000be6 <_vfiprintf_r+0x17a>
 8000bd6:	9b04      	ldr	r3, [sp, #16]
 8000bd8:	eba0 000a 	sub.w	r0, r0, sl
 8000bdc:	2240      	movs	r2, #64	; 0x40
 8000bde:	4082      	lsls	r2, r0
 8000be0:	4313      	orrs	r3, r2
 8000be2:	3401      	adds	r4, #1
 8000be4:	9304      	str	r3, [sp, #16]
 8000be6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bea:	482a      	ldr	r0, [pc, #168]	; (8000c94 <_vfiprintf_r+0x228>)
 8000bec:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bf0:	2206      	movs	r2, #6
 8000bf2:	f7ff faf5 	bl	80001e0 <memchr>
 8000bf6:	2800      	cmp	r0, #0
 8000bf8:	d03f      	beq.n	8000c7a <_vfiprintf_r+0x20e>
 8000bfa:	4b27      	ldr	r3, [pc, #156]	; (8000c98 <_vfiprintf_r+0x22c>)
 8000bfc:	bb1b      	cbnz	r3, 8000c46 <_vfiprintf_r+0x1da>
 8000bfe:	9b03      	ldr	r3, [sp, #12]
 8000c00:	3307      	adds	r3, #7
 8000c02:	f023 0307 	bic.w	r3, r3, #7
 8000c06:	3308      	adds	r3, #8
 8000c08:	9303      	str	r3, [sp, #12]
 8000c0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c0c:	443b      	add	r3, r7
 8000c0e:	9309      	str	r3, [sp, #36]	; 0x24
 8000c10:	e768      	b.n	8000ae4 <_vfiprintf_r+0x78>
 8000c12:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c16:	460c      	mov	r4, r1
 8000c18:	2001      	movs	r0, #1
 8000c1a:	e7a6      	b.n	8000b6a <_vfiprintf_r+0xfe>
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	3401      	adds	r4, #1
 8000c20:	9305      	str	r3, [sp, #20]
 8000c22:	4619      	mov	r1, r3
 8000c24:	f04f 0c0a 	mov.w	ip, #10
 8000c28:	4620      	mov	r0, r4
 8000c2a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c2e:	3a30      	subs	r2, #48	; 0x30
 8000c30:	2a09      	cmp	r2, #9
 8000c32:	d903      	bls.n	8000c3c <_vfiprintf_r+0x1d0>
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d0c6      	beq.n	8000bc6 <_vfiprintf_r+0x15a>
 8000c38:	9105      	str	r1, [sp, #20]
 8000c3a:	e7c4      	b.n	8000bc6 <_vfiprintf_r+0x15a>
 8000c3c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c40:	4604      	mov	r4, r0
 8000c42:	2301      	movs	r3, #1
 8000c44:	e7f0      	b.n	8000c28 <_vfiprintf_r+0x1bc>
 8000c46:	ab03      	add	r3, sp, #12
 8000c48:	9300      	str	r3, [sp, #0]
 8000c4a:	462a      	mov	r2, r5
 8000c4c:	4b13      	ldr	r3, [pc, #76]	; (8000c9c <_vfiprintf_r+0x230>)
 8000c4e:	a904      	add	r1, sp, #16
 8000c50:	4630      	mov	r0, r6
 8000c52:	f3af 8000 	nop.w
 8000c56:	4607      	mov	r7, r0
 8000c58:	1c78      	adds	r0, r7, #1
 8000c5a:	d1d6      	bne.n	8000c0a <_vfiprintf_r+0x19e>
 8000c5c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c5e:	07d9      	lsls	r1, r3, #31
 8000c60:	d405      	bmi.n	8000c6e <_vfiprintf_r+0x202>
 8000c62:	89ab      	ldrh	r3, [r5, #12]
 8000c64:	059a      	lsls	r2, r3, #22
 8000c66:	d402      	bmi.n	8000c6e <_vfiprintf_r+0x202>
 8000c68:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c6a:	f7ff fddf 	bl	800082c <__retarget_lock_release_recursive>
 8000c6e:	89ab      	ldrh	r3, [r5, #12]
 8000c70:	065b      	lsls	r3, r3, #25
 8000c72:	f53f af1d 	bmi.w	8000ab0 <_vfiprintf_r+0x44>
 8000c76:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c78:	e71c      	b.n	8000ab4 <_vfiprintf_r+0x48>
 8000c7a:	ab03      	add	r3, sp, #12
 8000c7c:	9300      	str	r3, [sp, #0]
 8000c7e:	462a      	mov	r2, r5
 8000c80:	4b06      	ldr	r3, [pc, #24]	; (8000c9c <_vfiprintf_r+0x230>)
 8000c82:	a904      	add	r1, sp, #16
 8000c84:	4630      	mov	r0, r6
 8000c86:	f000 f879 	bl	8000d7c <_printf_i>
 8000c8a:	e7e4      	b.n	8000c56 <_vfiprintf_r+0x1ea>
 8000c8c:	08001384 	.word	0x08001384
 8000c90:	0800138a 	.word	0x0800138a
 8000c94:	0800138e 	.word	0x0800138e
 8000c98:	00000000 	.word	0x00000000
 8000c9c:	08000a47 	.word	0x08000a47

08000ca0 <_printf_common>:
 8000ca0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ca4:	4616      	mov	r6, r2
 8000ca6:	4699      	mov	r9, r3
 8000ca8:	688a      	ldr	r2, [r1, #8]
 8000caa:	690b      	ldr	r3, [r1, #16]
 8000cac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000cb0:	4293      	cmp	r3, r2
 8000cb2:	bfb8      	it	lt
 8000cb4:	4613      	movlt	r3, r2
 8000cb6:	6033      	str	r3, [r6, #0]
 8000cb8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000cbc:	4607      	mov	r7, r0
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	b10a      	cbz	r2, 8000cc6 <_printf_common+0x26>
 8000cc2:	3301      	adds	r3, #1
 8000cc4:	6033      	str	r3, [r6, #0]
 8000cc6:	6823      	ldr	r3, [r4, #0]
 8000cc8:	0699      	lsls	r1, r3, #26
 8000cca:	bf42      	ittt	mi
 8000ccc:	6833      	ldrmi	r3, [r6, #0]
 8000cce:	3302      	addmi	r3, #2
 8000cd0:	6033      	strmi	r3, [r6, #0]
 8000cd2:	6825      	ldr	r5, [r4, #0]
 8000cd4:	f015 0506 	ands.w	r5, r5, #6
 8000cd8:	d106      	bne.n	8000ce8 <_printf_common+0x48>
 8000cda:	f104 0a19 	add.w	sl, r4, #25
 8000cde:	68e3      	ldr	r3, [r4, #12]
 8000ce0:	6832      	ldr	r2, [r6, #0]
 8000ce2:	1a9b      	subs	r3, r3, r2
 8000ce4:	42ab      	cmp	r3, r5
 8000ce6:	dc26      	bgt.n	8000d36 <_printf_common+0x96>
 8000ce8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000cec:	1e13      	subs	r3, r2, #0
 8000cee:	6822      	ldr	r2, [r4, #0]
 8000cf0:	bf18      	it	ne
 8000cf2:	2301      	movne	r3, #1
 8000cf4:	0692      	lsls	r2, r2, #26
 8000cf6:	d42b      	bmi.n	8000d50 <_printf_common+0xb0>
 8000cf8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cfc:	4649      	mov	r1, r9
 8000cfe:	4638      	mov	r0, r7
 8000d00:	47c0      	blx	r8
 8000d02:	3001      	adds	r0, #1
 8000d04:	d01e      	beq.n	8000d44 <_printf_common+0xa4>
 8000d06:	6823      	ldr	r3, [r4, #0]
 8000d08:	6922      	ldr	r2, [r4, #16]
 8000d0a:	f003 0306 	and.w	r3, r3, #6
 8000d0e:	2b04      	cmp	r3, #4
 8000d10:	bf02      	ittt	eq
 8000d12:	68e5      	ldreq	r5, [r4, #12]
 8000d14:	6833      	ldreq	r3, [r6, #0]
 8000d16:	1aed      	subeq	r5, r5, r3
 8000d18:	68a3      	ldr	r3, [r4, #8]
 8000d1a:	bf0c      	ite	eq
 8000d1c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d20:	2500      	movne	r5, #0
 8000d22:	4293      	cmp	r3, r2
 8000d24:	bfc4      	itt	gt
 8000d26:	1a9b      	subgt	r3, r3, r2
 8000d28:	18ed      	addgt	r5, r5, r3
 8000d2a:	2600      	movs	r6, #0
 8000d2c:	341a      	adds	r4, #26
 8000d2e:	42b5      	cmp	r5, r6
 8000d30:	d11a      	bne.n	8000d68 <_printf_common+0xc8>
 8000d32:	2000      	movs	r0, #0
 8000d34:	e008      	b.n	8000d48 <_printf_common+0xa8>
 8000d36:	2301      	movs	r3, #1
 8000d38:	4652      	mov	r2, sl
 8000d3a:	4649      	mov	r1, r9
 8000d3c:	4638      	mov	r0, r7
 8000d3e:	47c0      	blx	r8
 8000d40:	3001      	adds	r0, #1
 8000d42:	d103      	bne.n	8000d4c <_printf_common+0xac>
 8000d44:	f04f 30ff 	mov.w	r0, #4294967295
 8000d48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d4c:	3501      	adds	r5, #1
 8000d4e:	e7c6      	b.n	8000cde <_printf_common+0x3e>
 8000d50:	18e1      	adds	r1, r4, r3
 8000d52:	1c5a      	adds	r2, r3, #1
 8000d54:	2030      	movs	r0, #48	; 0x30
 8000d56:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d5a:	4422      	add	r2, r4
 8000d5c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d60:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d64:	3302      	adds	r3, #2
 8000d66:	e7c7      	b.n	8000cf8 <_printf_common+0x58>
 8000d68:	2301      	movs	r3, #1
 8000d6a:	4622      	mov	r2, r4
 8000d6c:	4649      	mov	r1, r9
 8000d6e:	4638      	mov	r0, r7
 8000d70:	47c0      	blx	r8
 8000d72:	3001      	adds	r0, #1
 8000d74:	d0e6      	beq.n	8000d44 <_printf_common+0xa4>
 8000d76:	3601      	adds	r6, #1
 8000d78:	e7d9      	b.n	8000d2e <_printf_common+0x8e>
	...

08000d7c <_printf_i>:
 8000d7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d80:	7e0f      	ldrb	r7, [r1, #24]
 8000d82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d84:	2f78      	cmp	r7, #120	; 0x78
 8000d86:	4691      	mov	r9, r2
 8000d88:	4680      	mov	r8, r0
 8000d8a:	460c      	mov	r4, r1
 8000d8c:	469a      	mov	sl, r3
 8000d8e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d92:	d807      	bhi.n	8000da4 <_printf_i+0x28>
 8000d94:	2f62      	cmp	r7, #98	; 0x62
 8000d96:	d80a      	bhi.n	8000dae <_printf_i+0x32>
 8000d98:	2f00      	cmp	r7, #0
 8000d9a:	f000 80d4 	beq.w	8000f46 <_printf_i+0x1ca>
 8000d9e:	2f58      	cmp	r7, #88	; 0x58
 8000da0:	f000 80c0 	beq.w	8000f24 <_printf_i+0x1a8>
 8000da4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000da8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000dac:	e03a      	b.n	8000e24 <_printf_i+0xa8>
 8000dae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000db2:	2b15      	cmp	r3, #21
 8000db4:	d8f6      	bhi.n	8000da4 <_printf_i+0x28>
 8000db6:	a101      	add	r1, pc, #4	; (adr r1, 8000dbc <_printf_i+0x40>)
 8000db8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000dbc:	08000e15 	.word	0x08000e15
 8000dc0:	08000e29 	.word	0x08000e29
 8000dc4:	08000da5 	.word	0x08000da5
 8000dc8:	08000da5 	.word	0x08000da5
 8000dcc:	08000da5 	.word	0x08000da5
 8000dd0:	08000da5 	.word	0x08000da5
 8000dd4:	08000e29 	.word	0x08000e29
 8000dd8:	08000da5 	.word	0x08000da5
 8000ddc:	08000da5 	.word	0x08000da5
 8000de0:	08000da5 	.word	0x08000da5
 8000de4:	08000da5 	.word	0x08000da5
 8000de8:	08000f2d 	.word	0x08000f2d
 8000dec:	08000e55 	.word	0x08000e55
 8000df0:	08000ee7 	.word	0x08000ee7
 8000df4:	08000da5 	.word	0x08000da5
 8000df8:	08000da5 	.word	0x08000da5
 8000dfc:	08000f4f 	.word	0x08000f4f
 8000e00:	08000da5 	.word	0x08000da5
 8000e04:	08000e55 	.word	0x08000e55
 8000e08:	08000da5 	.word	0x08000da5
 8000e0c:	08000da5 	.word	0x08000da5
 8000e10:	08000eef 	.word	0x08000eef
 8000e14:	682b      	ldr	r3, [r5, #0]
 8000e16:	1d1a      	adds	r2, r3, #4
 8000e18:	681b      	ldr	r3, [r3, #0]
 8000e1a:	602a      	str	r2, [r5, #0]
 8000e1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e20:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e24:	2301      	movs	r3, #1
 8000e26:	e09f      	b.n	8000f68 <_printf_i+0x1ec>
 8000e28:	6820      	ldr	r0, [r4, #0]
 8000e2a:	682b      	ldr	r3, [r5, #0]
 8000e2c:	0607      	lsls	r7, r0, #24
 8000e2e:	f103 0104 	add.w	r1, r3, #4
 8000e32:	6029      	str	r1, [r5, #0]
 8000e34:	d501      	bpl.n	8000e3a <_printf_i+0xbe>
 8000e36:	681e      	ldr	r6, [r3, #0]
 8000e38:	e003      	b.n	8000e42 <_printf_i+0xc6>
 8000e3a:	0646      	lsls	r6, r0, #25
 8000e3c:	d5fb      	bpl.n	8000e36 <_printf_i+0xba>
 8000e3e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000e42:	2e00      	cmp	r6, #0
 8000e44:	da03      	bge.n	8000e4e <_printf_i+0xd2>
 8000e46:	232d      	movs	r3, #45	; 0x2d
 8000e48:	4276      	negs	r6, r6
 8000e4a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e4e:	485a      	ldr	r0, [pc, #360]	; (8000fb8 <_printf_i+0x23c>)
 8000e50:	230a      	movs	r3, #10
 8000e52:	e012      	b.n	8000e7a <_printf_i+0xfe>
 8000e54:	682b      	ldr	r3, [r5, #0]
 8000e56:	6820      	ldr	r0, [r4, #0]
 8000e58:	1d19      	adds	r1, r3, #4
 8000e5a:	6029      	str	r1, [r5, #0]
 8000e5c:	0605      	lsls	r5, r0, #24
 8000e5e:	d501      	bpl.n	8000e64 <_printf_i+0xe8>
 8000e60:	681e      	ldr	r6, [r3, #0]
 8000e62:	e002      	b.n	8000e6a <_printf_i+0xee>
 8000e64:	0641      	lsls	r1, r0, #25
 8000e66:	d5fb      	bpl.n	8000e60 <_printf_i+0xe4>
 8000e68:	881e      	ldrh	r6, [r3, #0]
 8000e6a:	4853      	ldr	r0, [pc, #332]	; (8000fb8 <_printf_i+0x23c>)
 8000e6c:	2f6f      	cmp	r7, #111	; 0x6f
 8000e6e:	bf0c      	ite	eq
 8000e70:	2308      	moveq	r3, #8
 8000e72:	230a      	movne	r3, #10
 8000e74:	2100      	movs	r1, #0
 8000e76:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e7a:	6865      	ldr	r5, [r4, #4]
 8000e7c:	60a5      	str	r5, [r4, #8]
 8000e7e:	2d00      	cmp	r5, #0
 8000e80:	bfa2      	ittt	ge
 8000e82:	6821      	ldrge	r1, [r4, #0]
 8000e84:	f021 0104 	bicge.w	r1, r1, #4
 8000e88:	6021      	strge	r1, [r4, #0]
 8000e8a:	b90e      	cbnz	r6, 8000e90 <_printf_i+0x114>
 8000e8c:	2d00      	cmp	r5, #0
 8000e8e:	d04b      	beq.n	8000f28 <_printf_i+0x1ac>
 8000e90:	4615      	mov	r5, r2
 8000e92:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e96:	fb03 6711 	mls	r7, r3, r1, r6
 8000e9a:	5dc7      	ldrb	r7, [r0, r7]
 8000e9c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000ea0:	4637      	mov	r7, r6
 8000ea2:	42bb      	cmp	r3, r7
 8000ea4:	460e      	mov	r6, r1
 8000ea6:	d9f4      	bls.n	8000e92 <_printf_i+0x116>
 8000ea8:	2b08      	cmp	r3, #8
 8000eaa:	d10b      	bne.n	8000ec4 <_printf_i+0x148>
 8000eac:	6823      	ldr	r3, [r4, #0]
 8000eae:	07de      	lsls	r6, r3, #31
 8000eb0:	d508      	bpl.n	8000ec4 <_printf_i+0x148>
 8000eb2:	6923      	ldr	r3, [r4, #16]
 8000eb4:	6861      	ldr	r1, [r4, #4]
 8000eb6:	4299      	cmp	r1, r3
 8000eb8:	bfde      	ittt	le
 8000eba:	2330      	movle	r3, #48	; 0x30
 8000ebc:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000ec0:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000ec4:	1b52      	subs	r2, r2, r5
 8000ec6:	6122      	str	r2, [r4, #16]
 8000ec8:	f8cd a000 	str.w	sl, [sp]
 8000ecc:	464b      	mov	r3, r9
 8000ece:	aa03      	add	r2, sp, #12
 8000ed0:	4621      	mov	r1, r4
 8000ed2:	4640      	mov	r0, r8
 8000ed4:	f7ff fee4 	bl	8000ca0 <_printf_common>
 8000ed8:	3001      	adds	r0, #1
 8000eda:	d14a      	bne.n	8000f72 <_printf_i+0x1f6>
 8000edc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ee0:	b004      	add	sp, #16
 8000ee2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ee6:	6823      	ldr	r3, [r4, #0]
 8000ee8:	f043 0320 	orr.w	r3, r3, #32
 8000eec:	6023      	str	r3, [r4, #0]
 8000eee:	4833      	ldr	r0, [pc, #204]	; (8000fbc <_printf_i+0x240>)
 8000ef0:	2778      	movs	r7, #120	; 0x78
 8000ef2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000ef6:	6823      	ldr	r3, [r4, #0]
 8000ef8:	6829      	ldr	r1, [r5, #0]
 8000efa:	061f      	lsls	r7, r3, #24
 8000efc:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f00:	d402      	bmi.n	8000f08 <_printf_i+0x18c>
 8000f02:	065f      	lsls	r7, r3, #25
 8000f04:	bf48      	it	mi
 8000f06:	b2b6      	uxthmi	r6, r6
 8000f08:	07df      	lsls	r7, r3, #31
 8000f0a:	bf48      	it	mi
 8000f0c:	f043 0320 	orrmi.w	r3, r3, #32
 8000f10:	6029      	str	r1, [r5, #0]
 8000f12:	bf48      	it	mi
 8000f14:	6023      	strmi	r3, [r4, #0]
 8000f16:	b91e      	cbnz	r6, 8000f20 <_printf_i+0x1a4>
 8000f18:	6823      	ldr	r3, [r4, #0]
 8000f1a:	f023 0320 	bic.w	r3, r3, #32
 8000f1e:	6023      	str	r3, [r4, #0]
 8000f20:	2310      	movs	r3, #16
 8000f22:	e7a7      	b.n	8000e74 <_printf_i+0xf8>
 8000f24:	4824      	ldr	r0, [pc, #144]	; (8000fb8 <_printf_i+0x23c>)
 8000f26:	e7e4      	b.n	8000ef2 <_printf_i+0x176>
 8000f28:	4615      	mov	r5, r2
 8000f2a:	e7bd      	b.n	8000ea8 <_printf_i+0x12c>
 8000f2c:	682b      	ldr	r3, [r5, #0]
 8000f2e:	6826      	ldr	r6, [r4, #0]
 8000f30:	6961      	ldr	r1, [r4, #20]
 8000f32:	1d18      	adds	r0, r3, #4
 8000f34:	6028      	str	r0, [r5, #0]
 8000f36:	0635      	lsls	r5, r6, #24
 8000f38:	681b      	ldr	r3, [r3, #0]
 8000f3a:	d501      	bpl.n	8000f40 <_printf_i+0x1c4>
 8000f3c:	6019      	str	r1, [r3, #0]
 8000f3e:	e002      	b.n	8000f46 <_printf_i+0x1ca>
 8000f40:	0670      	lsls	r0, r6, #25
 8000f42:	d5fb      	bpl.n	8000f3c <_printf_i+0x1c0>
 8000f44:	8019      	strh	r1, [r3, #0]
 8000f46:	2300      	movs	r3, #0
 8000f48:	6123      	str	r3, [r4, #16]
 8000f4a:	4615      	mov	r5, r2
 8000f4c:	e7bc      	b.n	8000ec8 <_printf_i+0x14c>
 8000f4e:	682b      	ldr	r3, [r5, #0]
 8000f50:	1d1a      	adds	r2, r3, #4
 8000f52:	602a      	str	r2, [r5, #0]
 8000f54:	681d      	ldr	r5, [r3, #0]
 8000f56:	6862      	ldr	r2, [r4, #4]
 8000f58:	2100      	movs	r1, #0
 8000f5a:	4628      	mov	r0, r5
 8000f5c:	f7ff f940 	bl	80001e0 <memchr>
 8000f60:	b108      	cbz	r0, 8000f66 <_printf_i+0x1ea>
 8000f62:	1b40      	subs	r0, r0, r5
 8000f64:	6060      	str	r0, [r4, #4]
 8000f66:	6863      	ldr	r3, [r4, #4]
 8000f68:	6123      	str	r3, [r4, #16]
 8000f6a:	2300      	movs	r3, #0
 8000f6c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f70:	e7aa      	b.n	8000ec8 <_printf_i+0x14c>
 8000f72:	6923      	ldr	r3, [r4, #16]
 8000f74:	462a      	mov	r2, r5
 8000f76:	4649      	mov	r1, r9
 8000f78:	4640      	mov	r0, r8
 8000f7a:	47d0      	blx	sl
 8000f7c:	3001      	adds	r0, #1
 8000f7e:	d0ad      	beq.n	8000edc <_printf_i+0x160>
 8000f80:	6823      	ldr	r3, [r4, #0]
 8000f82:	079b      	lsls	r3, r3, #30
 8000f84:	d413      	bmi.n	8000fae <_printf_i+0x232>
 8000f86:	68e0      	ldr	r0, [r4, #12]
 8000f88:	9b03      	ldr	r3, [sp, #12]
 8000f8a:	4298      	cmp	r0, r3
 8000f8c:	bfb8      	it	lt
 8000f8e:	4618      	movlt	r0, r3
 8000f90:	e7a6      	b.n	8000ee0 <_printf_i+0x164>
 8000f92:	2301      	movs	r3, #1
 8000f94:	4632      	mov	r2, r6
 8000f96:	4649      	mov	r1, r9
 8000f98:	4640      	mov	r0, r8
 8000f9a:	47d0      	blx	sl
 8000f9c:	3001      	adds	r0, #1
 8000f9e:	d09d      	beq.n	8000edc <_printf_i+0x160>
 8000fa0:	3501      	adds	r5, #1
 8000fa2:	68e3      	ldr	r3, [r4, #12]
 8000fa4:	9903      	ldr	r1, [sp, #12]
 8000fa6:	1a5b      	subs	r3, r3, r1
 8000fa8:	42ab      	cmp	r3, r5
 8000faa:	dcf2      	bgt.n	8000f92 <_printf_i+0x216>
 8000fac:	e7eb      	b.n	8000f86 <_printf_i+0x20a>
 8000fae:	2500      	movs	r5, #0
 8000fb0:	f104 0619 	add.w	r6, r4, #25
 8000fb4:	e7f5      	b.n	8000fa2 <_printf_i+0x226>
 8000fb6:	bf00      	nop
 8000fb8:	08001395 	.word	0x08001395
 8000fbc:	080013a6 	.word	0x080013a6

08000fc0 <__sflush_r>:
 8000fc0:	898a      	ldrh	r2, [r1, #12]
 8000fc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fc4:	4605      	mov	r5, r0
 8000fc6:	0710      	lsls	r0, r2, #28
 8000fc8:	460c      	mov	r4, r1
 8000fca:	d457      	bmi.n	800107c <__sflush_r+0xbc>
 8000fcc:	684b      	ldr	r3, [r1, #4]
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	dc04      	bgt.n	8000fdc <__sflush_r+0x1c>
 8000fd2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000fd4:	2b00      	cmp	r3, #0
 8000fd6:	dc01      	bgt.n	8000fdc <__sflush_r+0x1c>
 8000fd8:	2000      	movs	r0, #0
 8000fda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fdc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fde:	2e00      	cmp	r6, #0
 8000fe0:	d0fa      	beq.n	8000fd8 <__sflush_r+0x18>
 8000fe2:	2300      	movs	r3, #0
 8000fe4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000fe8:	682f      	ldr	r7, [r5, #0]
 8000fea:	6a21      	ldr	r1, [r4, #32]
 8000fec:	602b      	str	r3, [r5, #0]
 8000fee:	d032      	beq.n	8001056 <__sflush_r+0x96>
 8000ff0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000ff2:	89a3      	ldrh	r3, [r4, #12]
 8000ff4:	075a      	lsls	r2, r3, #29
 8000ff6:	d505      	bpl.n	8001004 <__sflush_r+0x44>
 8000ff8:	6863      	ldr	r3, [r4, #4]
 8000ffa:	1ac0      	subs	r0, r0, r3
 8000ffc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000ffe:	b10b      	cbz	r3, 8001004 <__sflush_r+0x44>
 8001000:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001002:	1ac0      	subs	r0, r0, r3
 8001004:	2300      	movs	r3, #0
 8001006:	4602      	mov	r2, r0
 8001008:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800100a:	6a21      	ldr	r1, [r4, #32]
 800100c:	4628      	mov	r0, r5
 800100e:	47b0      	blx	r6
 8001010:	1c43      	adds	r3, r0, #1
 8001012:	89a3      	ldrh	r3, [r4, #12]
 8001014:	d106      	bne.n	8001024 <__sflush_r+0x64>
 8001016:	6829      	ldr	r1, [r5, #0]
 8001018:	291d      	cmp	r1, #29
 800101a:	d82b      	bhi.n	8001074 <__sflush_r+0xb4>
 800101c:	4a28      	ldr	r2, [pc, #160]	; (80010c0 <__sflush_r+0x100>)
 800101e:	410a      	asrs	r2, r1
 8001020:	07d6      	lsls	r6, r2, #31
 8001022:	d427      	bmi.n	8001074 <__sflush_r+0xb4>
 8001024:	2200      	movs	r2, #0
 8001026:	6062      	str	r2, [r4, #4]
 8001028:	04d9      	lsls	r1, r3, #19
 800102a:	6922      	ldr	r2, [r4, #16]
 800102c:	6022      	str	r2, [r4, #0]
 800102e:	d504      	bpl.n	800103a <__sflush_r+0x7a>
 8001030:	1c42      	adds	r2, r0, #1
 8001032:	d101      	bne.n	8001038 <__sflush_r+0x78>
 8001034:	682b      	ldr	r3, [r5, #0]
 8001036:	b903      	cbnz	r3, 800103a <__sflush_r+0x7a>
 8001038:	6560      	str	r0, [r4, #84]	; 0x54
 800103a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800103c:	602f      	str	r7, [r5, #0]
 800103e:	2900      	cmp	r1, #0
 8001040:	d0ca      	beq.n	8000fd8 <__sflush_r+0x18>
 8001042:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001046:	4299      	cmp	r1, r3
 8001048:	d002      	beq.n	8001050 <__sflush_r+0x90>
 800104a:	4628      	mov	r0, r5
 800104c:	f7ff fbf0 	bl	8000830 <_free_r>
 8001050:	2000      	movs	r0, #0
 8001052:	6360      	str	r0, [r4, #52]	; 0x34
 8001054:	e7c1      	b.n	8000fda <__sflush_r+0x1a>
 8001056:	2301      	movs	r3, #1
 8001058:	4628      	mov	r0, r5
 800105a:	47b0      	blx	r6
 800105c:	1c41      	adds	r1, r0, #1
 800105e:	d1c8      	bne.n	8000ff2 <__sflush_r+0x32>
 8001060:	682b      	ldr	r3, [r5, #0]
 8001062:	2b00      	cmp	r3, #0
 8001064:	d0c5      	beq.n	8000ff2 <__sflush_r+0x32>
 8001066:	2b1d      	cmp	r3, #29
 8001068:	d001      	beq.n	800106e <__sflush_r+0xae>
 800106a:	2b16      	cmp	r3, #22
 800106c:	d101      	bne.n	8001072 <__sflush_r+0xb2>
 800106e:	602f      	str	r7, [r5, #0]
 8001070:	e7b2      	b.n	8000fd8 <__sflush_r+0x18>
 8001072:	89a3      	ldrh	r3, [r4, #12]
 8001074:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001078:	81a3      	strh	r3, [r4, #12]
 800107a:	e7ae      	b.n	8000fda <__sflush_r+0x1a>
 800107c:	690f      	ldr	r7, [r1, #16]
 800107e:	2f00      	cmp	r7, #0
 8001080:	d0aa      	beq.n	8000fd8 <__sflush_r+0x18>
 8001082:	0793      	lsls	r3, r2, #30
 8001084:	680e      	ldr	r6, [r1, #0]
 8001086:	bf08      	it	eq
 8001088:	694b      	ldreq	r3, [r1, #20]
 800108a:	600f      	str	r7, [r1, #0]
 800108c:	bf18      	it	ne
 800108e:	2300      	movne	r3, #0
 8001090:	1bf6      	subs	r6, r6, r7
 8001092:	608b      	str	r3, [r1, #8]
 8001094:	2e00      	cmp	r6, #0
 8001096:	dd9f      	ble.n	8000fd8 <__sflush_r+0x18>
 8001098:	6a21      	ldr	r1, [r4, #32]
 800109a:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800109e:	4633      	mov	r3, r6
 80010a0:	463a      	mov	r2, r7
 80010a2:	4628      	mov	r0, r5
 80010a4:	47e0      	blx	ip
 80010a6:	2800      	cmp	r0, #0
 80010a8:	dc06      	bgt.n	80010b8 <__sflush_r+0xf8>
 80010aa:	89a3      	ldrh	r3, [r4, #12]
 80010ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010b0:	81a3      	strh	r3, [r4, #12]
 80010b2:	f04f 30ff 	mov.w	r0, #4294967295
 80010b6:	e790      	b.n	8000fda <__sflush_r+0x1a>
 80010b8:	4407      	add	r7, r0
 80010ba:	1a36      	subs	r6, r6, r0
 80010bc:	e7ea      	b.n	8001094 <__sflush_r+0xd4>
 80010be:	bf00      	nop
 80010c0:	dfbffffe 	.word	0xdfbffffe

080010c4 <_fflush_r>:
 80010c4:	b538      	push	{r3, r4, r5, lr}
 80010c6:	690b      	ldr	r3, [r1, #16]
 80010c8:	4605      	mov	r5, r0
 80010ca:	460c      	mov	r4, r1
 80010cc:	b913      	cbnz	r3, 80010d4 <_fflush_r+0x10>
 80010ce:	2500      	movs	r5, #0
 80010d0:	4628      	mov	r0, r5
 80010d2:	bd38      	pop	{r3, r4, r5, pc}
 80010d4:	b118      	cbz	r0, 80010de <_fflush_r+0x1a>
 80010d6:	6a03      	ldr	r3, [r0, #32]
 80010d8:	b90b      	cbnz	r3, 80010de <_fflush_r+0x1a>
 80010da:	f7ff faa1 	bl	8000620 <__sinit>
 80010de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010e2:	2b00      	cmp	r3, #0
 80010e4:	d0f3      	beq.n	80010ce <_fflush_r+0xa>
 80010e6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80010e8:	07d0      	lsls	r0, r2, #31
 80010ea:	d404      	bmi.n	80010f6 <_fflush_r+0x32>
 80010ec:	0599      	lsls	r1, r3, #22
 80010ee:	d402      	bmi.n	80010f6 <_fflush_r+0x32>
 80010f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010f2:	f7ff fb9a 	bl	800082a <__retarget_lock_acquire_recursive>
 80010f6:	4628      	mov	r0, r5
 80010f8:	4621      	mov	r1, r4
 80010fa:	f7ff ff61 	bl	8000fc0 <__sflush_r>
 80010fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001100:	07da      	lsls	r2, r3, #31
 8001102:	4605      	mov	r5, r0
 8001104:	d4e4      	bmi.n	80010d0 <_fflush_r+0xc>
 8001106:	89a3      	ldrh	r3, [r4, #12]
 8001108:	059b      	lsls	r3, r3, #22
 800110a:	d4e1      	bmi.n	80010d0 <_fflush_r+0xc>
 800110c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800110e:	f7ff fb8d 	bl	800082c <__retarget_lock_release_recursive>
 8001112:	e7dd      	b.n	80010d0 <_fflush_r+0xc>

08001114 <__swbuf_r>:
 8001114:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001116:	460e      	mov	r6, r1
 8001118:	4614      	mov	r4, r2
 800111a:	4605      	mov	r5, r0
 800111c:	b118      	cbz	r0, 8001126 <__swbuf_r+0x12>
 800111e:	6a03      	ldr	r3, [r0, #32]
 8001120:	b90b      	cbnz	r3, 8001126 <__swbuf_r+0x12>
 8001122:	f7ff fa7d 	bl	8000620 <__sinit>
 8001126:	69a3      	ldr	r3, [r4, #24]
 8001128:	60a3      	str	r3, [r4, #8]
 800112a:	89a3      	ldrh	r3, [r4, #12]
 800112c:	071a      	lsls	r2, r3, #28
 800112e:	d525      	bpl.n	800117c <__swbuf_r+0x68>
 8001130:	6923      	ldr	r3, [r4, #16]
 8001132:	b31b      	cbz	r3, 800117c <__swbuf_r+0x68>
 8001134:	6823      	ldr	r3, [r4, #0]
 8001136:	6922      	ldr	r2, [r4, #16]
 8001138:	1a98      	subs	r0, r3, r2
 800113a:	6963      	ldr	r3, [r4, #20]
 800113c:	b2f6      	uxtb	r6, r6
 800113e:	4283      	cmp	r3, r0
 8001140:	4637      	mov	r7, r6
 8001142:	dc04      	bgt.n	800114e <__swbuf_r+0x3a>
 8001144:	4621      	mov	r1, r4
 8001146:	4628      	mov	r0, r5
 8001148:	f7ff ffbc 	bl	80010c4 <_fflush_r>
 800114c:	b9e0      	cbnz	r0, 8001188 <__swbuf_r+0x74>
 800114e:	68a3      	ldr	r3, [r4, #8]
 8001150:	3b01      	subs	r3, #1
 8001152:	60a3      	str	r3, [r4, #8]
 8001154:	6823      	ldr	r3, [r4, #0]
 8001156:	1c5a      	adds	r2, r3, #1
 8001158:	6022      	str	r2, [r4, #0]
 800115a:	701e      	strb	r6, [r3, #0]
 800115c:	6962      	ldr	r2, [r4, #20]
 800115e:	1c43      	adds	r3, r0, #1
 8001160:	429a      	cmp	r2, r3
 8001162:	d004      	beq.n	800116e <__swbuf_r+0x5a>
 8001164:	89a3      	ldrh	r3, [r4, #12]
 8001166:	07db      	lsls	r3, r3, #31
 8001168:	d506      	bpl.n	8001178 <__swbuf_r+0x64>
 800116a:	2e0a      	cmp	r6, #10
 800116c:	d104      	bne.n	8001178 <__swbuf_r+0x64>
 800116e:	4621      	mov	r1, r4
 8001170:	4628      	mov	r0, r5
 8001172:	f7ff ffa7 	bl	80010c4 <_fflush_r>
 8001176:	b938      	cbnz	r0, 8001188 <__swbuf_r+0x74>
 8001178:	4638      	mov	r0, r7
 800117a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800117c:	4621      	mov	r1, r4
 800117e:	4628      	mov	r0, r5
 8001180:	f000 f806 	bl	8001190 <__swsetup_r>
 8001184:	2800      	cmp	r0, #0
 8001186:	d0d5      	beq.n	8001134 <__swbuf_r+0x20>
 8001188:	f04f 37ff 	mov.w	r7, #4294967295
 800118c:	e7f4      	b.n	8001178 <__swbuf_r+0x64>
	...

08001190 <__swsetup_r>:
 8001190:	b538      	push	{r3, r4, r5, lr}
 8001192:	4b2a      	ldr	r3, [pc, #168]	; (800123c <__swsetup_r+0xac>)
 8001194:	4605      	mov	r5, r0
 8001196:	6818      	ldr	r0, [r3, #0]
 8001198:	460c      	mov	r4, r1
 800119a:	b118      	cbz	r0, 80011a4 <__swsetup_r+0x14>
 800119c:	6a03      	ldr	r3, [r0, #32]
 800119e:	b90b      	cbnz	r3, 80011a4 <__swsetup_r+0x14>
 80011a0:	f7ff fa3e 	bl	8000620 <__sinit>
 80011a4:	89a3      	ldrh	r3, [r4, #12]
 80011a6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011aa:	0718      	lsls	r0, r3, #28
 80011ac:	d422      	bmi.n	80011f4 <__swsetup_r+0x64>
 80011ae:	06d9      	lsls	r1, r3, #27
 80011b0:	d407      	bmi.n	80011c2 <__swsetup_r+0x32>
 80011b2:	2309      	movs	r3, #9
 80011b4:	602b      	str	r3, [r5, #0]
 80011b6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80011ba:	81a3      	strh	r3, [r4, #12]
 80011bc:	f04f 30ff 	mov.w	r0, #4294967295
 80011c0:	e034      	b.n	800122c <__swsetup_r+0x9c>
 80011c2:	0758      	lsls	r0, r3, #29
 80011c4:	d512      	bpl.n	80011ec <__swsetup_r+0x5c>
 80011c6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011c8:	b141      	cbz	r1, 80011dc <__swsetup_r+0x4c>
 80011ca:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011ce:	4299      	cmp	r1, r3
 80011d0:	d002      	beq.n	80011d8 <__swsetup_r+0x48>
 80011d2:	4628      	mov	r0, r5
 80011d4:	f7ff fb2c 	bl	8000830 <_free_r>
 80011d8:	2300      	movs	r3, #0
 80011da:	6363      	str	r3, [r4, #52]	; 0x34
 80011dc:	89a3      	ldrh	r3, [r4, #12]
 80011de:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80011e2:	81a3      	strh	r3, [r4, #12]
 80011e4:	2300      	movs	r3, #0
 80011e6:	6063      	str	r3, [r4, #4]
 80011e8:	6923      	ldr	r3, [r4, #16]
 80011ea:	6023      	str	r3, [r4, #0]
 80011ec:	89a3      	ldrh	r3, [r4, #12]
 80011ee:	f043 0308 	orr.w	r3, r3, #8
 80011f2:	81a3      	strh	r3, [r4, #12]
 80011f4:	6923      	ldr	r3, [r4, #16]
 80011f6:	b94b      	cbnz	r3, 800120c <__swsetup_r+0x7c>
 80011f8:	89a3      	ldrh	r3, [r4, #12]
 80011fa:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001202:	d003      	beq.n	800120c <__swsetup_r+0x7c>
 8001204:	4621      	mov	r1, r4
 8001206:	4628      	mov	r0, r5
 8001208:	f000 f850 	bl	80012ac <__smakebuf_r>
 800120c:	89a0      	ldrh	r0, [r4, #12]
 800120e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001212:	f010 0301 	ands.w	r3, r0, #1
 8001216:	d00a      	beq.n	800122e <__swsetup_r+0x9e>
 8001218:	2300      	movs	r3, #0
 800121a:	60a3      	str	r3, [r4, #8]
 800121c:	6963      	ldr	r3, [r4, #20]
 800121e:	425b      	negs	r3, r3
 8001220:	61a3      	str	r3, [r4, #24]
 8001222:	6923      	ldr	r3, [r4, #16]
 8001224:	b943      	cbnz	r3, 8001238 <__swsetup_r+0xa8>
 8001226:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800122a:	d1c4      	bne.n	80011b6 <__swsetup_r+0x26>
 800122c:	bd38      	pop	{r3, r4, r5, pc}
 800122e:	0781      	lsls	r1, r0, #30
 8001230:	bf58      	it	pl
 8001232:	6963      	ldrpl	r3, [r4, #20]
 8001234:	60a3      	str	r3, [r4, #8]
 8001236:	e7f4      	b.n	8001222 <__swsetup_r+0x92>
 8001238:	2000      	movs	r0, #0
 800123a:	e7f7      	b.n	800122c <__swsetup_r+0x9c>
 800123c:	20000058 	.word	0x20000058

08001240 <_sbrk_r>:
 8001240:	b538      	push	{r3, r4, r5, lr}
 8001242:	4d06      	ldr	r5, [pc, #24]	; (800125c <_sbrk_r+0x1c>)
 8001244:	2300      	movs	r3, #0
 8001246:	4604      	mov	r4, r0
 8001248:	4608      	mov	r0, r1
 800124a:	602b      	str	r3, [r5, #0]
 800124c:	f7ff f8fc 	bl	8000448 <_sbrk>
 8001250:	1c43      	adds	r3, r0, #1
 8001252:	d102      	bne.n	800125a <_sbrk_r+0x1a>
 8001254:	682b      	ldr	r3, [r5, #0]
 8001256:	b103      	cbz	r3, 800125a <_sbrk_r+0x1a>
 8001258:	6023      	str	r3, [r4, #0]
 800125a:	bd38      	pop	{r3, r4, r5, pc}
 800125c:	200001b8 	.word	0x200001b8

08001260 <__swhatbuf_r>:
 8001260:	b570      	push	{r4, r5, r6, lr}
 8001262:	460c      	mov	r4, r1
 8001264:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001268:	2900      	cmp	r1, #0
 800126a:	b096      	sub	sp, #88	; 0x58
 800126c:	4615      	mov	r5, r2
 800126e:	461e      	mov	r6, r3
 8001270:	da0d      	bge.n	800128e <__swhatbuf_r+0x2e>
 8001272:	89a3      	ldrh	r3, [r4, #12]
 8001274:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001278:	f04f 0100 	mov.w	r1, #0
 800127c:	bf0c      	ite	eq
 800127e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001282:	2340      	movne	r3, #64	; 0x40
 8001284:	2000      	movs	r0, #0
 8001286:	6031      	str	r1, [r6, #0]
 8001288:	602b      	str	r3, [r5, #0]
 800128a:	b016      	add	sp, #88	; 0x58
 800128c:	bd70      	pop	{r4, r5, r6, pc}
 800128e:	466a      	mov	r2, sp
 8001290:	f000 f848 	bl	8001324 <_fstat_r>
 8001294:	2800      	cmp	r0, #0
 8001296:	dbec      	blt.n	8001272 <__swhatbuf_r+0x12>
 8001298:	9901      	ldr	r1, [sp, #4]
 800129a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800129e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80012a2:	4259      	negs	r1, r3
 80012a4:	4159      	adcs	r1, r3
 80012a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012aa:	e7eb      	b.n	8001284 <__swhatbuf_r+0x24>

080012ac <__smakebuf_r>:
 80012ac:	898b      	ldrh	r3, [r1, #12]
 80012ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012b0:	079d      	lsls	r5, r3, #30
 80012b2:	4606      	mov	r6, r0
 80012b4:	460c      	mov	r4, r1
 80012b6:	d507      	bpl.n	80012c8 <__smakebuf_r+0x1c>
 80012b8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012bc:	6023      	str	r3, [r4, #0]
 80012be:	6123      	str	r3, [r4, #16]
 80012c0:	2301      	movs	r3, #1
 80012c2:	6163      	str	r3, [r4, #20]
 80012c4:	b002      	add	sp, #8
 80012c6:	bd70      	pop	{r4, r5, r6, pc}
 80012c8:	ab01      	add	r3, sp, #4
 80012ca:	466a      	mov	r2, sp
 80012cc:	f7ff ffc8 	bl	8001260 <__swhatbuf_r>
 80012d0:	9900      	ldr	r1, [sp, #0]
 80012d2:	4605      	mov	r5, r0
 80012d4:	4630      	mov	r0, r6
 80012d6:	f7ff fb15 	bl	8000904 <_malloc_r>
 80012da:	b948      	cbnz	r0, 80012f0 <__smakebuf_r+0x44>
 80012dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012e0:	059a      	lsls	r2, r3, #22
 80012e2:	d4ef      	bmi.n	80012c4 <__smakebuf_r+0x18>
 80012e4:	f023 0303 	bic.w	r3, r3, #3
 80012e8:	f043 0302 	orr.w	r3, r3, #2
 80012ec:	81a3      	strh	r3, [r4, #12]
 80012ee:	e7e3      	b.n	80012b8 <__smakebuf_r+0xc>
 80012f0:	89a3      	ldrh	r3, [r4, #12]
 80012f2:	6020      	str	r0, [r4, #0]
 80012f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012f8:	81a3      	strh	r3, [r4, #12]
 80012fa:	9b00      	ldr	r3, [sp, #0]
 80012fc:	6163      	str	r3, [r4, #20]
 80012fe:	9b01      	ldr	r3, [sp, #4]
 8001300:	6120      	str	r0, [r4, #16]
 8001302:	b15b      	cbz	r3, 800131c <__smakebuf_r+0x70>
 8001304:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001308:	4630      	mov	r0, r6
 800130a:	f000 f81d 	bl	8001348 <_isatty_r>
 800130e:	b128      	cbz	r0, 800131c <__smakebuf_r+0x70>
 8001310:	89a3      	ldrh	r3, [r4, #12]
 8001312:	f023 0303 	bic.w	r3, r3, #3
 8001316:	f043 0301 	orr.w	r3, r3, #1
 800131a:	81a3      	strh	r3, [r4, #12]
 800131c:	89a3      	ldrh	r3, [r4, #12]
 800131e:	431d      	orrs	r5, r3
 8001320:	81a5      	strh	r5, [r4, #12]
 8001322:	e7cf      	b.n	80012c4 <__smakebuf_r+0x18>

08001324 <_fstat_r>:
 8001324:	b538      	push	{r3, r4, r5, lr}
 8001326:	4d07      	ldr	r5, [pc, #28]	; (8001344 <_fstat_r+0x20>)
 8001328:	2300      	movs	r3, #0
 800132a:	4604      	mov	r4, r0
 800132c:	4608      	mov	r0, r1
 800132e:	4611      	mov	r1, r2
 8001330:	602b      	str	r3, [r5, #0]
 8001332:	f7ff f863 	bl	80003fc <_fstat>
 8001336:	1c43      	adds	r3, r0, #1
 8001338:	d102      	bne.n	8001340 <_fstat_r+0x1c>
 800133a:	682b      	ldr	r3, [r5, #0]
 800133c:	b103      	cbz	r3, 8001340 <_fstat_r+0x1c>
 800133e:	6023      	str	r3, [r4, #0]
 8001340:	bd38      	pop	{r3, r4, r5, pc}
 8001342:	bf00      	nop
 8001344:	200001b8 	.word	0x200001b8

08001348 <_isatty_r>:
 8001348:	b538      	push	{r3, r4, r5, lr}
 800134a:	4d06      	ldr	r5, [pc, #24]	; (8001364 <_isatty_r+0x1c>)
 800134c:	2300      	movs	r3, #0
 800134e:	4604      	mov	r4, r0
 8001350:	4608      	mov	r0, r1
 8001352:	602b      	str	r3, [r5, #0]
 8001354:	f7ff f861 	bl	800041a <_isatty>
 8001358:	1c43      	adds	r3, r0, #1
 800135a:	d102      	bne.n	8001362 <_isatty_r+0x1a>
 800135c:	682b      	ldr	r3, [r5, #0]
 800135e:	b103      	cbz	r3, 8001362 <_isatty_r+0x1a>
 8001360:	6023      	str	r3, [r4, #0]
 8001362:	bd38      	pop	{r3, r4, r5, pc}
 8001364:	200001b8 	.word	0x200001b8

08001368 <_init>:
 8001368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800136a:	bf00      	nop
 800136c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800136e:	bc08      	pop	{r3}
 8001370:	469e      	mov	lr, r3
 8001372:	4770      	bx	lr

08001374 <_fini>:
 8001374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001376:	bf00      	nop
 8001378:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800137a:	bc08      	pop	{r3}
 800137c:	469e      	mov	lr, r3
 800137e:	4770      	bx	lr
